#include "StdAfx.h"
#include "IOParamBank.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

CIOParam::CIOParam(void)
{
	m_Check = CHECK_TYPE_A;
}


CIOParam::~CIOParam(void)
{
}

BOOL CIOParam::ReturnOn()
{
	// Input일 경우 B접은 Off되어야 감지. Output일 경우 Off해야 동작
	// Input일 경우 A접은 On되어야 감지. Output일 경우 On해야 동작
	return (m_Check == CHECK_TYPE_A) ? TRUE:FALSE;
}

BOOL CIOParam::ReturnOff()
{
	// Input일 경우 B접은 Off되어야 감지. Output일 경우 Off해야 동작
	// Input일 경우 A접은 On되어야 감지. Output일 경우 On해야 동작
	return (m_Check == CHECK_TYPE_A) ? FALSE:TRUE;
}

BOOL CIOParam::ReturnFrom( VAC_STATE vac )
{
	return vac == VAC_ON ? ReturnOn():ReturnOff();
}

BOOL CIOParam::ReturnFrom( CYL_STATE cyl )
{
	if( (cyl == CYL_FWD) && (cyl == CYL_DOWN) )
		return ReturnOn();
	else
		return ReturnOff();
}

BOOL CIOParam::GetIOCheck(ONOFF value)
{
	BOOL bRet = FALSE;
	if(value == ON)
	{
		bRet = ReturnOn();
	}
	else
	{
		bRet = ReturnOff();
	}
	//return value == ON ? ReturnOn():ReturnOff();
	return bRet;
}

BOOL CIOParam::GetIOCheck(BOOL bValue)
{
	BOOL bRet = FALSE;
	if(bValue == TRUE)
	{
		bRet = ReturnOn();
	}
	else
	{
		bRet = ReturnOff();
	}
	//return value == ON ? ReturnOn():ReturnOff();
	return bRet;
}








CIOParamBank::CIOParamBank( void )
{

}

CIOParamBank::~CIOParamBank( void )
{

}

void CIOParamBank::InitializeIOParam()
{
	// 미사용 I/O도 있으니 기본 I/O No.로 일단 이름지어놓는다
	for(int i = 0; i < MAX_IN_ID; i++)
	{
		m_In[i].m_strIOAddress.Format(_T("X_%03X"), i);
		m_In[i].m_strIOName.Format(_T("X_%03X"), i);
	}
	for(int i = 0; i < MAX_OUT_ID; i++)
	{
		m_Out[i].m_strIOAddress.Format(_T("Y_%03X"), i);
		m_Out[i].m_strIOName.Format(_T("Y_%03X"), i);
	}

	InitializeIOParam_IN();
	InitializeIOParam_OUT();
}

void CIOParamBank::InitializeIOParam_IN()
{
#if(AMT_TYPE == 1)
	// 000 ~ 00F
	m_In[X_EMS_SW_FRONT].m_strIOName = _T("X_EMS_SW_FRONT");
	m_In[X_EMS_SW_FRONT].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_EMS_SW_BACK].m_strIOName = _T("X_EMS_SW_BACK");
	m_In[X_EMS_SW_BACK].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_MC_POWER].m_strIOName = _T("X_MC_POWER");
	m_In[X_MC_POWER].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_003].m_strIOName = _T("X_003");
	m_In[X_003].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_START_SW].m_strIOName = _T("X_START_SW");
	m_In[X_START_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_STOP_SW].m_strIOName = _T("X_STOP_SW");
	m_In[X_STOP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_RESET_SW].m_strIOName = _T("X_RESET_SW");
	m_In[X_RESET_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_TEACH_KEY_SW].m_strIOName = _T("X_TEACH_KEY_SW");
	m_In[X_TEACH_KEY_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LIGHT_CONTROLLER_SW].m_strIOName = _T("X_LIGHT_CONTROLLER_SW");
	m_In[X_LIGHT_CONTROLLER_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_ROBOT_EMS].m_strIOName = _T("X_LD_ROBOT_EMS");
	m_In[X_LD_ROBOT_EMS].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_ROBOT_EMS].m_strIOName = _T("X_ULD_ROBOT_EMS");
	m_In[X_ULD_ROBOT_EMS].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_ROBOT_GRIP_EMS_SW].m_strIOName = _T("X_LD_ROBOT_GRIP_EMS_SW");
	m_In[X_LD_ROBOT_GRIP_EMS_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_ROBOT_GRIP_EMS_SW].m_strIOName = _T("X_ULD_ROBOT_GRIP_EMS_SW");
	m_In[X_ULD_ROBOT_GRIP_EMS_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_MAIN_AIR_SEN_1].m_strIOName = _T("X_MAIN_AIR_SEN_1");
	m_In[X_MAIN_AIR_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_MAIN_AIR_SEN_2].m_strIOName = _T("X_MAIN_AIR_SEN_2");
	m_In[X_MAIN_AIR_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_MAIN_VAC_SEN_1].m_strIOName = _T("X_MAIN_VAC_SEN_1");
	m_In[X_MAIN_VAC_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;

	// 010 ~ 01F
	m_In[X_LD_ROBOT_GRIP_SW].m_strIOName = _T("X_LD_ROBOT_GRIP_SW");
	m_In[X_LD_ROBOT_GRIP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_ROBOT_GRIP_SW].m_strIOName = _T("X_ULD_ROBOT_GRIP_SW");
	m_In[X_ULD_ROBOT_GRIP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_MAIN_VAC_SEN_2].m_strIOName = _T("X_MAIN_VAC_SEN_2");
	m_In[X_MAIN_VAC_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_013].m_strIOName = _T("X_013");
	m_In[X_013].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_FIRE_ALARM_SEN_1].m_strIOName = _T("X_FIRE_ALARM_SEN_1");
	m_In[X_FIRE_ALARM_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_FIRE_ALARM_SEN_2].m_strIOName = _T("X_FIRE_ALARM_SEN_2");
	m_In[X_FIRE_ALARM_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_FIRE_ALARM_SEN_3].m_strIOName = _T("X_FIRE_ALARM_SEN_3");
	m_In[X_FIRE_ALARM_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_FIRE_ALARM_SEN_4].m_strIOName = _T("X_FIRE_ALARM_SEN_4");
	m_In[X_FIRE_ALARM_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_DOOR_SEN_1].m_strIOName = _T("X_LD_DOOR_SEN_1");
	m_In[X_LD_DOOR_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_DOOR_SEN_2].m_strIOName = _T("X_LD_DOOR_SEN_2");
	m_In[X_LD_DOOR_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_DOOR_SEN_3].m_strIOName = _T("X_LD_DOOR_SEN_3");
	m_In[X_LD_DOOR_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_DOOR_SEN_4].m_strIOName = _T("X_LD_DOOR_SEN_4");
	m_In[X_LD_DOOR_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_DOOR_SEN_5].m_strIOName = _T("X_LD_DOOR_SEN_5");
	m_In[X_LD_DOOR_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_DOOR_SEN_6].m_strIOName = _T("X_LD_DOOR_SEN_6");
	m_In[X_LD_DOOR_SEN_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_01E].m_strIOName = _T("X_01E");
	m_In[X_01E].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_01F].m_strIOName = _T("X_01F");
	m_In[X_01F].m_Check = CIOParam::CHECK_TYPE_A;

	// 020 ~ 02F
	m_In[X_UPS_BOX_TEMP_ALARM_SEN_1].m_strIOName = _T("X_UPS_BOX_TEMP_ALARM_SEN_1");
	m_In[X_UPS_BOX_TEMP_ALARM_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_UPS_BOX_TEMP_ALARM_SEN_2].m_strIOName = _T("X_UPS_BOX_TEMP_ALARM_SEN_2");
	m_In[X_UPS_BOX_TEMP_ALARM_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_BOX_TEMP_ALARM_SEN_1].m_strIOName = _T("X_GPS_BOX_TEMP_ALARM_SEN_1");
	m_In[X_GPS_BOX_TEMP_ALARM_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_BOX_TEMP_ALARM_SEN_2].m_strIOName = _T("X_GPS_BOX_TEMP_ALARM_SEN_2");
	m_In[X_GPS_BOX_TEMP_ALARM_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_024].m_strIOName = _T("X_024");
	m_In[X_024].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_BOX_TEMP_ALARM_SEN].m_strIOName = _T("X_PC_BOX_TEMP_ALARM_SEN");
	m_In[X_PC_BOX_TEMP_ALARM_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_IO_CP_ON].m_strIOName = _T("X_IO_CP_ON");
	m_In[X_IO_CP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LIMIT_SEN_CP_ON].m_strIOName = _T("X_LIMIT_SEN_CP_ON");
	m_In[X_LIMIT_SEN_CP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_SAFETY_RELAY_CP_ON].m_strIOName = _T("X_SAFETY_RELAY_CP_ON");
	m_In[X_SAFETY_RELAY_CP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_SERVO_MOTOR_BREAK_CP_ON].m_strIOName = _T("X_SERVO_MOTOR_BREAK_CP_ON");
	m_In[X_SERVO_MOTOR_BREAK_CP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_SYSTEM_CP_ON].m_strIOName = _T("X_SYSTEM_CP_ON");
	m_In[X_SYSTEM_CP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LIGHT_CONTROLLER_CP_ON].m_strIOName = _T("X_LIGHT_CONTROLLER_CP_ON");
	m_In[X_LIGHT_CONTROLLER_CP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_CAMERA_POWER_CP_ON].m_strIOName = _T("X_CAMERA_POWER_CP_ON");
	m_In[X_CAMERA_POWER_CP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_MCR_POWER_CP_ON].m_strIOName = _T("X_MCR_POWER_CP_ON");
	m_In[X_MCR_POWER_CP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_ROBOT_EMS_ALARM].m_strIOName = _T("X_LD_ROBOT_EMS_ALARM");
	m_In[X_LD_ROBOT_EMS_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_02F].m_strIOName = _T("X_02F");
	m_In[X_02F].m_Check = CIOParam::CHECK_TYPE_A;

	// 030 ~ 03F
	m_In[X_UPS_FAN_ALARM_SEN_1].m_strIOName = _T("X_UPS_FAN_ALARM_SEN_1");
	m_In[X_UPS_FAN_ALARM_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_UPS_FAN_ALARM_SEN_2].m_strIOName = _T("X_UPS_FAN_ALARM_SEN_2");
	m_In[X_UPS_FAN_ALARM_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_UPS_FAN_ALARM_SEN_3].m_strIOName = _T("X_UPS_FAN_ALARM_SEN_3");
	m_In[X_UPS_FAN_ALARM_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_UPS_FAN_ALARM_SEN_4].m_strIOName = _T("X_UPS_FAN_ALARM_SEN_4");
	m_In[X_UPS_FAN_ALARM_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_FAN_ALARM_SEN_1].m_strIOName = _T("X_GPS_FAN_ALARM_SEN_1");
	m_In[X_GPS_FAN_ALARM_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_FAN_ALARM_SEN_2].m_strIOName = _T("X_GPS_FAN_ALARM_SEN_2");
	m_In[X_GPS_FAN_ALARM_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_FAN_ALARM_SEN_3].m_strIOName = _T("X_GPS_FAN_ALARM_SEN_3");
	m_In[X_GPS_FAN_ALARM_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_FAN_ALARM_SEN_4].m_strIOName = _T("X_GPS_FAN_ALARM_SEN_4");
	m_In[X_GPS_FAN_ALARM_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_FAN_ALARM_SEN_5].m_strIOName = _T("X_GPS_FAN_ALARM_SEN_5");
	m_In[X_GPS_FAN_ALARM_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_FAN_ALARM_SEN_6].m_strIOName = _T("X_GPS_FAN_ALARM_SEN_6");
	m_In[X_GPS_FAN_ALARM_SEN_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_FAN_ALARM_SEN_7].m_strIOName = _T("X_GPS_FAN_ALARM_SEN_7");
	m_In[X_GPS_FAN_ALARM_SEN_7].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_FAN_ALARM_SEN_8].m_strIOName = _T("X_GPS_FAN_ALARM_SEN_8");
	m_In[X_GPS_FAN_ALARM_SEN_8].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_03E].m_strIOName = _T("X_03E");
	m_In[X_03E].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_03F].m_strIOName = _T("X_03F");
	m_In[X_03F].m_Check = CIOParam::CHECK_TYPE_A;

	// 040 ~ 04F
	m_In[X_EMS_SW_LEFT].m_strIOName = _T("X_EMS_SW_LEFT");
	m_In[X_EMS_SW_LEFT].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_ROBOT_KEY_SW].m_strIOName = _T("X_LD_ROBOT_KEY_SW");
	m_In[X_LD_ROBOT_KEY_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_ROBOT_VAC_SEN].m_strIOName = _T("X_LD_ROBOT_VAC_SEN");
	m_In[X_LD_ROBOT_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PA_TR_CH1_VAC_SEN].m_strIOName = _T("X_PA_TR_CH1_VAC_SEN");
	m_In[X_PA_TR_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PA_TR_CH2_VAC_SEN].m_strIOName = _T("X_PA_TR_CH2_VAC_SEN");
	m_In[X_PA_TR_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_TR_CH1_VAC_SEN].m_strIOName = _T("X_LD_TR_CH1_VAC_SEN");
	m_In[X_LD_TR_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_TR_CH2_VAC_SEN].m_strIOName = _T("X_LD_TR_CH2_VAC_SEN");
	m_In[X_LD_TR_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_UPPER_SHUTTLE_CH1_VAC_SEN].m_strIOName = _T("X_LD_UPPER_SHUTTLE_CH1_VAC_SEN");
	m_In[X_LD_UPPER_SHUTTLE_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_UPPER_SHUTTLE_CH2_VAC_SEN].m_strIOName = _T("X_LD_UPPER_SHUTTLE_CH2_VAC_SEN");
	m_In[X_LD_UPPER_SHUTTLE_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_LOWER_SHUTTLE_CH1_VAC_SEN].m_strIOName = _T("X_LD_LOWER_SHUTTLE_CH1_VAC_SEN");
	m_In[X_LD_LOWER_SHUTTLE_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_LOWER_SHUTTLE_CH2_VAC_SEN].m_strIOName = _T("X_LD_LOWER_SHUTTLE_CH2_VAC_SEN");
	m_In[X_LD_LOWER_SHUTTLE_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LOWER_MCR_READY].m_strIOName = _T("X_LOWER_MCR_READY");
	m_In[X_LOWER_MCR_READY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_UPPER_MCR_READY].m_strIOName = _T("X_UPPER_MCR_READY");
	m_In[X_UPPER_MCR_READY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PA_STG_CH1_VAC_SEN].m_strIOName = _T("X_PA_STG_CH1_VAC_SEN");
	m_In[X_PA_STG_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PA_STG_CH2_VAC_SEN].m_strIOName = _T("X_PA_STG_CH2_VAC_SEN");
	m_In[X_PA_STG_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_04F].m_strIOName = _T("X_04F");
	m_In[X_04F].m_Check = CIOParam::CHECK_TYPE_A;

	// 050 ~ 05F 
	m_In[X_HOTLINE_ALIVE].m_strIOName = _T("X_HOTLINE_ALIVE");
	m_In[X_HOTLINE_ALIVE].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_EMERGENCY].m_strIOName = _T("X_HOTLINE_EMERGENCY");
	m_In[X_HOTLINE_EMERGENCY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_NET_READY].m_strIOName = _T("X_HOTLINE_NET_READY");
	m_In[X_HOTLINE_NET_READY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_RESERVED].m_strIOName = _T("X_HOTLINE_RESERVED");
	m_In[X_HOTLINE_RESERVED].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_INTERFACE_1].m_strIOName = _T("X_HOTLINE_INTERFACE_1");
	m_In[X_HOTLINE_INTERFACE_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_INTERFACE_2].m_strIOName = _T("X_HOTLINE_INTERFACE_2");
	m_In[X_HOTLINE_INTERFACE_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_INTERFACE_3].m_strIOName = _T("X_HOTLINE_INTERFACE_3");
	m_In[X_HOTLINE_INTERFACE_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_SUB_EMO].m_strIOName = _T("X_HOTLINE_SUB_EMO");
	m_In[X_HOTLINE_SUB_EMO].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_CONV_CELL_SEN_1].m_strIOName = _T("X_LD_CONV_CELL_SEN_1");
	m_In[X_LD_CONV_CELL_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_CONV_CELL_SEN_2].m_strIOName = _T("X_LD_CONV_CELL_SEN_2");
	m_In[X_LD_CONV_CELL_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_CONV_CELL_SEN_3].m_strIOName = _T("X_LD_CONV_CELL_SEN_3");
	m_In[X_LD_CONV_CELL_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_05B].m_strIOName = _T("X_05B");
	m_In[X_05B].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_05C].m_strIOName = _T("X_05C");
	m_In[X_05C].m_Check = CIOParam::CHECK_TYPE_A;
	//2018-01-22,GHLEE, PASTAGEFPCBSENSOR 설치 대비(혹시 몰라 AMT_TYPE == 1 에도 추가)
	m_In[X_PA_STAGE_CH1_FPCB_SEN].m_strIOName = _T("X_PA_STAGE_CH1_FPCB_SEN");
	m_In[X_PA_STAGE_CH1_FPCB_SEN].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_PA_STAGE_CH_FPCB_SEN].m_strIOName = _T("X_PA_STAGE_CH2_FPCB_SEN");
	m_In[X_PA_STAGE_CH_FPCB_SEN].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_LD_CONV_FPCB_SEN].m_strIOName = _T("X_LD_CONV_FPCB_SEN");
	m_In[X_LD_CONV_FPCB_SEN].m_Check = CIOParam::CHECK_TYPE_A;

	// 060 ~ 06F
	m_In[X_PC_RACK_FAN_ALARM_SEN_1].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_1");
	m_In[X_PC_RACK_FAN_ALARM_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_2].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_2");
	m_In[X_PC_RACK_FAN_ALARM_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_3].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_3");
	m_In[X_PC_RACK_FAN_ALARM_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_4].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_4");
	m_In[X_PC_RACK_FAN_ALARM_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_5].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_5");
	m_In[X_PC_RACK_FAN_ALARM_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_6].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_6");
	m_In[X_PC_RACK_FAN_ALARM_SEN_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_7].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_7");
	m_In[X_PC_RACK_FAN_ALARM_SEN_7].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_8].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_8");
	m_In[X_PC_RACK_FAN_ALARM_SEN_8].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_9].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_9");
	m_In[X_PC_RACK_FAN_ALARM_SEN_9].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_10].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_10");
	m_In[X_PC_RACK_FAN_ALARM_SEN_10].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_11].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_11");
	m_In[X_PC_RACK_FAN_ALARM_SEN_11].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_12].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_12");
	m_In[X_PC_RACK_FAN_ALARM_SEN_12].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_13].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_13");
	m_In[X_PC_RACK_FAN_ALARM_SEN_13].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_14].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_14");
	m_In[X_PC_RACK_FAN_ALARM_SEN_14].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_15].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_15");
	m_In[X_PC_RACK_FAN_ALARM_SEN_15].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_16].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_16");
	m_In[X_PC_RACK_FAN_ALARM_SEN_16].m_Check = CIOParam::CHECK_TYPE_A;

	// 070 ~ 07F
	m_In[X_070].m_strIOName = _T("X_070");
	m_In[X_070].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_071].m_strIOName = _T("X_071");
	m_In[X_071].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_072].m_strIOName = _T("X_072");
	m_In[X_072].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_073].m_strIOName = _T("X_073");
	m_In[X_073].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_074].m_strIOName = _T("X_074");
	m_In[X_074].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_075].m_strIOName = _T("X_075");
	m_In[X_075].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_076].m_strIOName = _T("X_076");
	m_In[X_076].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_077].m_strIOName = _T("X_077");
	m_In[X_077].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_078].m_strIOName = _T("X_078");
	m_In[X_078].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_079].m_strIOName = _T("X_079");
	m_In[X_079].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_07A].m_strIOName = _T("X_07A");
	m_In[X_07A].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_07B].m_strIOName = _T("X_07B");
	m_In[X_07B].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_07C].m_strIOName = _T("X_07C");
	m_In[X_07C].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_07D].m_strIOName = _T("X_07D");
	m_In[X_07D].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_07E].m_strIOName = _T("X_07E");
	m_In[X_07E].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_07F].m_strIOName = _T("X_07F");
	m_In[X_07F].m_Check = CIOParam::CHECK_TYPE_A;

	// 080 ~ 08F
	m_In[X_080].m_strIOName = _T("X_080");
	m_In[X_080].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_A_JIG_CH1_VAC_SEN].m_strIOName = _T("X_A_JIG_CH1_VAC_SEN");
	m_In[X_A_JIG_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_A_JIG_CH2_VAC_SEN].m_strIOName = _T("X_A_JIG_CH2_VAC_SEN");
	m_In[X_A_JIG_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_083].m_strIOName = _T("X_083");
	m_In[X_083].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_B_JIG_CH1_VAC_SEN].m_strIOName = _T("X_B_JIG_CH1_VAC_SEN");
	m_In[X_B_JIG_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_B_JIG_CH2_VAC_SEN].m_strIOName = _T("X_B_JIG_CH2_VAC_SEN");
	m_In[X_B_JIG_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_086].m_strIOName = _T("X_086");
	m_In[X_086].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_C_JIG_CH1_VAC_SEN].m_strIOName = _T("X_C_JIG_CH1_VAC_SEN");
	m_In[X_C_JIG_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_C_JIG_CH2_VAC_SEN].m_strIOName = _T("X_C_JIG_CH2_VAC_SEN");
	m_In[X_C_JIG_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_089].m_strIOName = _T("X_089");
	m_In[X_089].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_D_JIG_CH1_VAC_SEN].m_strIOName = _T("X_D_JIG_CH1_VAC_SEN");
	m_In[X_D_JIG_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_D_JIG_CH2_VAC_SEN].m_strIOName = _T("X_D_JIG_CH2_VAC_SEN");
	m_In[X_D_JIG_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_08C].m_strIOName = _T("X_08C");
	m_In[X_08C].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_08D].m_strIOName = _T("X_08D");
	m_In[X_08D].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_08E].m_strIOName = _T("X_08E");
	m_In[X_08E].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_08F].m_strIOName = _T("X_08F");
	m_In[X_08F].m_Check = CIOParam::CHECK_TYPE_A;

	// 090 ~ 09F
	m_In[X_090].m_strIOName = _T("X_090");
	m_In[X_090].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_091].m_strIOName = _T("X_091");
	m_In[X_091].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_092].m_strIOName = _T("X_092");
	m_In[X_092].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_093].m_strIOName = _T("X_093");
	m_In[X_093].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_094].m_strIOName = _T("X_094");
	m_In[X_094].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_095].m_strIOName = _T("X_095");
	m_In[X_095].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_096].m_strIOName = _T("X_096");
	m_In[X_096].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_097].m_strIOName = _T("X_097");
	m_In[X_097].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_098].m_strIOName = _T("X_098");
	m_In[X_098].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_099].m_strIOName = _T("X_099");
	m_In[X_099].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_09A].m_strIOName = _T("X_09A");
	m_In[X_09A].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_09B].m_strIOName = _T("X_09B");
	m_In[X_09B].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_09C].m_strIOName = _T("X_09C");
	m_In[X_09C].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_09D].m_strIOName = _T("X_09D");
	m_In[X_09D].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_09E].m_strIOName = _T("X_09E");
	m_In[X_09E].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_09F].m_strIOName = _T("X_09F");
	m_In[X_09F].m_Check = CIOParam::CHECK_TYPE_A;

	// 0A0 ~ 0AF
	m_In[X_0A0].m_strIOName = _T("X_0A0");
	m_In[X_0A0].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0A1].m_strIOName = _T("X_0A1");
	m_In[X_0A1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_IN_SW].m_strIOName = _T("X_GOOD_LD_TRAY_IN_SW");
	m_In[X_GOOD_LD_TRAY_IN_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_OUT_SW].m_strIOName = _T("X_GOOD_LD_TRAY_OUT_SW");
	m_In[X_GOOD_LD_TRAY_OUT_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_MUTE_SW].m_strIOName = _T("X_GOOD_LD_TRAY_MUTE_SW");
	m_In[X_GOOD_LD_TRAY_MUTE_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_IN_SW].m_strIOName = _T("X_GOOD_ULD_TRAY_IN_SW");
	m_In[X_GOOD_ULD_TRAY_IN_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_OUT_SW].m_strIOName = _T("X_GOOD_ULD_TRAY_OUT_SW");
	m_In[X_GOOD_ULD_TRAY_OUT_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_MUTE_SW].m_strIOName = _T("X_GOOD_ULD_TRAY_MUTE_SW");
	m_In[X_GOOD_ULD_TRAY_MUTE_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_IN_REQ_SW].m_strIOName = _T("X_NG_TRAY_IN_REQ_SW");
	m_In[X_NG_TRAY_IN_REQ_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_IN_COMP_SW].m_strIOName = _T("X_NG_TRAY_IN_COMP_SW");
	m_In[X_NG_TRAY_IN_COMP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_MUTE_SW].m_strIOName = _T("X_NG_TRAY_MUTE_SW");
	m_In[X_NG_TRAY_MUTE_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_TR_CH1_VAC_SEN].m_strIOName = _T("X_ULD_TR_CH1_VAC_SEN");
	m_In[X_ULD_TR_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_TR_CH2_VAC_SEN].m_strIOName = _T("X_ULD_TR_CH2_VAC_SEN");
	m_In[X_ULD_TR_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_STAGE_CH1_VAC_SEN].m_strIOName = _T("X_ULD_STAGE_CH1_VAC_SEN");
	m_In[X_ULD_STAGE_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_STAGE_CH2_VAC_SEN].m_strIOName = _T("X_ULD_STAGE_CH2_VAC_SEN");
	m_In[X_ULD_STAGE_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_ROBOT_VAC_SEN].m_strIOName = _T("X_ULD_ROBOT_VAC_SEN");
	m_In[X_ULD_ROBOT_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;

	// 0B0 ~ 0BF
	m_In[X_GOOD_TRAY_TR_VAC_SEN_1].m_strIOName = _T("X_GOOD_TRAY_TR_VAC_SEN_1");
	m_In[X_GOOD_TRAY_TR_VAC_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0B1].m_strIOName = _T("X_0B1");
	m_In[X_0B1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_TR_VAC_SEN_1].m_strIOName = _T("X_NG_TRAY_TR_VAC_SEN_1");
	m_In[X_NG_TRAY_TR_VAC_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0B3].m_strIOName = _T("X_0B3");
	m_In[X_0B3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1");
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1");
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2");
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2");
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3].m_strIOName = _T("X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3");
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3].m_strIOName = _T("X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3");
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4].m_strIOName = _T("X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4");
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4].m_strIOName = _T("X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4");
	m_In[X_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1");
	m_In[X_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1");
	m_In[X_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2");
	m_In[X_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2");
	m_In[X_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;

	// 0C0 ~ 0CF
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1");
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1");
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2");
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2");
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SEN_1].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SEN_1");
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SEN_1].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SEN_1");
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SEN_2].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SEN_2");
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SEN_2].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SEN_2");
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;

	// 0D0 ~ 0DF
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1");
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1");
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2");
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2");
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1");
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1");
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2");
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2");
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_UP_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_STOPPER_UP_SEN_1");
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_UP_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SEN_1");
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_UP_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_STOPPER_UP_SEN_2");
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_UP_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SEN_2");
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_OUT_REQ_SW].m_strIOName = _T("X_NG_TRAY_OUT_REQ_SW");
	m_In[X_NG_TRAY_OUT_REQ_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_OUT_COMP_SW].m_strIOName = _T("X_NG_TRAY_OUT_COMP_SW");
	m_In[X_NG_TRAY_OUT_COMP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0DE].m_strIOName = _T("X_0DE");
	m_In[X_0DE].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_FIRE_ALARM_SEN_5].m_strIOName = _T("X_FIRE_ALARM_SEN_5");
	m_In[X_FIRE_ALARM_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;


	// 0E0 ~ 0EF
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1");
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1");
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2");
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2");
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1");
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1");
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2");
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2");
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;

	// 0F0 ~ 0FF
	m_In[X_NG_TRAY_LOWER_STOPPER_UP_SEN_1].m_strIOName = _T("X_NG_TRAY_LOWER_STOPPER_UP_SEN_1");
	m_In[X_NG_TRAY_LOWER_STOPPER_UP_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LOWER_STOPPER_DOWN_SEN_1].m_strIOName = _T("X_NG_TRAY_LOWER_STOPPER_DOWN_SEN_1");
	m_In[X_NG_TRAY_LOWER_STOPPER_DOWN_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LOWER_STOPPER_UP_SEN_2].m_strIOName = _T("X_NG_TRAY_LOWER_STOPPER_UP_SEN_2");
	m_In[X_NG_TRAY_LOWER_STOPPER_UP_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LOWER_STOPPER_DOWN_SEN_2].m_strIOName = _T("X_NG_TRAY_LOWER_STOPPER_DOWN_SEN_2");
	m_In[X_NG_TRAY_LOWER_STOPPER_DOWN_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_ARM_FORWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_ARM_FORWARD_SEN_1");
	m_In[X_NG_TRAY_ARM_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_ARM_BACKWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_ARM_BACKWARD_SEN_1");
	m_In[X_NG_TRAY_ARM_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_ARM_FORWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_ARM_FORWARD_SEN_2");
	m_In[X_NG_TRAY_ARM_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_ARM_BACKWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_ARM_BACKWARD_SEN_2");
	m_In[X_NG_TRAY_ARM_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_ARM_FORWARD_SEN_1].m_strIOName = _T("X_NG_BUFFER_TRAY_ARM_FORWARD_SEN_1");
	m_In[X_NG_BUFFER_TRAY_ARM_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_ARM_BACKWARD_SEN_1].m_strIOName = _T("X_NG_BUFFER_TRAY_ARM_BACKWARD_SEN_1");
	m_In[X_NG_BUFFER_TRAY_ARM_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_ARM_FORWARD_SEN_2].m_strIOName = _T("X_NG_BUFFER_TRAY_ARM_FORWARD_SEN_2");
	m_In[X_NG_BUFFER_TRAY_ARM_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_ARM_BACKWARD_SEN_2].m_strIOName = _T("X_NG_BUFFER_TRAY_ARM_BACKWARD_SEN_2");
	m_In[X_NG_BUFFER_TRAY_ARM_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_TRAY_UP_SEN].m_strIOName = _T("X_NG_TRAY_TRAY_UP_SEN");
	m_In[X_NG_TRAY_TRAY_UP_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_TRAY_DOWN_SEN].m_strIOName = _T("X_NG_TRAY_TRAY_DOWN_SEN");
	m_In[X_NG_TRAY_TRAY_DOWN_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_TRAY_UP_SEN].m_strIOName = _T("X_NG_BUFFER_TRAY_TRAY_UP_SEN");
	m_In[X_NG_BUFFER_TRAY_TRAY_UP_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_TRAY_DOWN_SEN].m_strIOName = _T("X_NG_BUFFER_TRAY_TRAY_DOWN_SEN");
	m_In[X_NG_BUFFER_TRAY_TRAY_DOWN_SEN].m_Check = CIOParam::CHECK_TYPE_A;

	// 100 ~ 10F
	m_In[X_GOOD_ULD_TRAY_LIFT_SEN].m_strIOName = _T("X_GOOD_ULD_TRAY_LIFT_SEN");
	m_In[X_GOOD_ULD_TRAY_LIFT_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LIFT_SEN].m_strIOName = _T("X_GOOD_LD_TRAY_LIFT_SEN");
	m_In[X_GOOD_LD_TRAY_LIFT_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_1].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_SEN_1");
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_2].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_SEN_2");
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_3].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_SEN_3");
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_4].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_SEN_4");
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_5].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_SEN_5");
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_1].m_strIOName = _T("X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_1");
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_2].m_strIOName = _T("X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_2");
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_3].m_strIOName = _T("X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_3");
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_4].m_strIOName = _T("X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_4");
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_5].m_strIOName = _T("X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_5");
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_SEN_1].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_SEN_1");
	m_In[X_GOOD_LD_CONV_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_SEN_2].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_SEN_2");
	m_In[X_GOOD_LD_CONV_TRAY_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_SEN_3].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_SEN_3");
	m_In[X_GOOD_LD_CONV_TRAY_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_SEN_4].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_SEN_4");
	m_In[X_GOOD_LD_CONV_TRAY_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;

	//110 ~ 11F
	m_In[X_GOOD_LD_CONV_TRAY_SEN_5].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_SEN_5");
	m_In[X_GOOD_LD_CONV_TRAY_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_1].m_strIOName = _T("X_GOOD_LD_BUFFER_CONV_TRAY_SEN_1");
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_2].m_strIOName = _T("X_GOOD_LD_BUFFER_CONV_TRAY_SEN_2");
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_3].m_strIOName = _T("X_GOOD_LD_BUFFER_CONV_TRAY_SEN_3");
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_4].m_strIOName = _T("X_GOOD_LD_BUFFER_CONV_TRAY_SEN_4");
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_5].m_strIOName = _T("X_GOOD_LD_BUFFER_CONV_TRAY_SEN_5");
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_SEN_1].m_strIOName = _T("X_NG_CONV_TRAY_SEN_1");
	m_In[X_NG_CONV_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_SEN_2].m_strIOName = _T("X_NG_CONV_TRAY_SEN_2");
	m_In[X_NG_CONV_TRAY_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_SEN_3].m_strIOName = _T("X_NG_CONV_TRAY_SEN_3");
	m_In[X_NG_CONV_TRAY_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_SEN_4].m_strIOName = _T("X_NG_CONV_TRAY_SEN_4");
	m_In[X_NG_CONV_TRAY_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_SEN_5].m_strIOName = _T("X_NG_CONV_TRAY_SEN_5");
	m_In[X_NG_CONV_TRAY_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_1].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_SEN_1");
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_2].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_SEN_2");
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_3].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_SEN_3");
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_4].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_SEN_4");
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_5].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_SEN_5");
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;

	// 120 ~ 12F
	m_In[X_GOOD_ULD_TRAY_LIFT_LIMIT_SEN_1].m_strIOName = _T("X_GOOD_ULD_TRAY_LIFT_LIMIT_SEN_1");
	m_In[X_GOOD_ULD_TRAY_LIFT_LIMIT_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LIFT_LIMIT_SEN_2].m_strIOName = _T("X_GOOD_ULD_TRAY_LIFT_LIMIT_SEN_2");
	m_In[X_GOOD_ULD_TRAY_LIFT_LIMIT_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LIFT_LIMIT_SEN_3].m_strIOName = _T("X_GOOD_ULD_TRAY_LIFT_LIMIT_SEN_3");
	m_In[X_GOOD_ULD_TRAY_LIFT_LIMIT_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_ORG_SENSOR].m_strIOName = _T("X_GOOD_ULD_TRAY_ORG_SENSOR");
	m_In[X_GOOD_ULD_TRAY_ORG_SENSOR].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_1");
	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_2");
	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_3].m_strIOName = _T("X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_3");
	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_ORG_SENSOR].m_strIOName = _T("X_GOOD_LD_TRAY_ORG_SENSOR");
	m_In[X_GOOD_LD_TRAY_ORG_SENSOR].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_NG_TRAY_LIFT_LIMIT_SEN_1].m_strIOName = _T("X_NG_TRAY_LIFT_LIMIT_SEN_1");
	m_In[X_NG_TRAY_LIFT_LIMIT_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LIFT_LIMIT_SEN_2].m_strIOName = _T("X_NG_TRAY_LIFT_LIMIT_SEN_2");
	m_In[X_NG_TRAY_LIFT_LIMIT_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LIFT_LIMIT_SEN_3].m_strIOName = _T("X_NG_TRAY_LIFT_LIMIT_SEN_3");
	m_In[X_NG_TRAY_LIFT_LIMIT_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_ORG_SENSOR].m_strIOName = _T("X_NG_TRAY_ORG_SENSOR");
	m_In[X_NG_TRAY_ORG_SENSOR].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_NG_TRAY_BUFFER_LIFT_LIMIT_SEN_1].m_strIOName = _T("X_NG_TRAY_BUFFER_LIFT_LIMIT_SEN_1");
	m_In[X_NG_TRAY_BUFFER_LIFT_LIMIT_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_BUFFER_LIFT_LIMIT_SEN_2].m_strIOName = _T("X_NG_TRAY_BUFFER_LIFT_LIMIT_SEN_2");
	m_In[X_NG_TRAY_BUFFER_LIFT_LIMIT_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_BUFFER_LIFT_LIMIT_SEN_3].m_strIOName = _T("X_NG_TRAY_BUFFER_LIFT_LIMIT_SEN_3");
	m_In[X_NG_TRAY_BUFFER_LIFT_LIMIT_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_BUFFER_ORG_SENSOR].m_strIOName = _T("X_NG_TRAY_BUFFER_ORG_SENSOR");
	m_In[X_NG_TRAY_BUFFER_ORG_SENSOR].m_Check = CIOParam::CHECK_TYPE_A;

	// 130 ~ 13F
	m_In[X_GOOD_ULD_CONV_TRAY_INVERTER_RUN].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_INVERTER_RUN");
	m_In[X_GOOD_ULD_CONV_TRAY_INVERTER_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_INVERTER_ALARM].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_INVERTER_ALARM");
	m_In[X_GOOD_ULD_CONV_TRAY_INVERTER_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_RUN].m_strIOName = _T("X_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_RUN");
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_ALARM].m_strIOName = _T("X_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_ALARM");
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_INVERTER_RUN].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_INVERTER_RUN");
	m_In[X_GOOD_LD_CONV_TRAY_INVERTER_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_INVERTER_ALARM].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_INVERTER_ALARM");
	m_In[X_GOOD_LD_CONV_TRAY_INVERTER_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_RUN].m_strIOName = _T("X_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_RUN");
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_ALARM].m_strIOName = _T("X_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_ALARM");
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_INVERTER_RUN].m_strIOName = _T("X_NG_CONV_TRAY_INVERTER_RUN");
	m_In[X_NG_CONV_TRAY_INVERTER_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_INVERTER_ALARM].m_strIOName = _T("X_NG_CONV_TRAY_INVERTER_ALARM");
	m_In[X_NG_CONV_TRAY_INVERTER_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_INVERTER_RUN].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_INVERTER_RUN");
	m_In[X_NG_BUFFER_CONV_TRAY_INVERTER_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_INVERTER_ALARM].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_INVERTER_ALARM");
	m_In[X_NG_BUFFER_CONV_TRAY_INVERTER_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_ORG_MISS_SEN].m_strIOName = _T("X_GOOD_ULD_TRAY_ORG_MISS_SEN");
	m_In[X_GOOD_ULD_TRAY_ORG_MISS_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_ORG_MISS_SEN].m_strIOName = _T("X_GOOD_LD_TRAY_ORG_MISS_SEN");
	m_In[X_GOOD_LD_TRAY_ORG_MISS_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_ORG_MISS_SENSOR].m_strIOName = _T("X_NG_TRAY_ORG_MISS_SENSOR");
	m_In[X_NG_TRAY_ORG_MISS_SENSOR].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_BUFFER_ORG_MISS_SENSOR].m_strIOName = _T("X_NG_TRAY_BUFFER_ORG_MISS_SENSOR");
	m_In[X_NG_TRAY_BUFFER_ORG_MISS_SENSOR].m_Check = CIOParam::CHECK_TYPE_A;

	// 140 ~ 14F
	m_In[X_GOOD_LD_CONV_TRAY_PIO_GO].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_GO");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_GO].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_REQ].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_REQ");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_REQ].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_CONNECTION].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_CONNECTION");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_CONNECTION].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_BUSY].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_BUSY");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_BUSY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_COMP].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_COMP");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_COMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT5].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_OUT5");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT6].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_OUT6");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT6].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT7].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_OUT7");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT7].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT8].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_OUT8");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT8].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_GO].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_GO");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_GO].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_REQ].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_REQ");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_REQ].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_CONNECTION].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_CONNECTION");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_CONNECTION].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_BUSY].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_BUSY");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_BUSY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_COMP].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_COMP");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_COMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT5].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_OUT5");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT6].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_OUT6");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT6].m_Check = CIOParam::CHECK_TYPE_A;
	
	// 150 ~ 15F
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT7].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_OUT7");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT7].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT8].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_OUT8");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT8].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_GO].m_strIOName = _T("X_NG_CONV_TRAY_PIO_GO");
	m_In[X_NG_CONV_TRAY_PIO_GO].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_REQ].m_strIOName = _T("X_NG_CONV_TRAY_PIO_REQ");
	m_In[X_NG_CONV_TRAY_PIO_REQ].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_CONNECTION].m_strIOName = _T("X_NG_CONV_TRAY_PIO_CONNECTION");
	m_In[X_NG_CONV_TRAY_PIO_CONNECTION].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_BUSY].m_strIOName = _T("X_NG_CONV_TRAY_PIO_BUSY");
	m_In[X_NG_CONV_TRAY_PIO_BUSY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_COMP].m_strIOName = _T("X_NG_CONV_TRAY_PIO_COMP");
	m_In[X_NG_CONV_TRAY_PIO_COMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_OUT5].m_strIOName = _T("X_NG_CONV_TRAY_PIO_OUT5");
	m_In[X_NG_CONV_TRAY_PIO_OUT5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_OUT6].m_strIOName = _T("X_NG_CONV_TRAY_PIO_OUT6");
	m_In[X_NG_CONV_TRAY_PIO_OUT6].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_OUT7].m_strIOName = _T("X_NG_CONV_TRAY_PIO_OUT7");
	m_In[X_NG_CONV_TRAY_PIO_OUT7].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_OUT8].m_strIOName = _T("X_NG_CONV_TRAY_PIO_OUT8");
	m_In[X_NG_CONV_TRAY_PIO_OUT8].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_DOOR_SEN_1].m_strIOName = _T("X_ULD_DOOR_SEN_1");
	m_In[X_ULD_DOOR_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_DOOR_SEN_2].m_strIOName = _T("X_ULD_DOOR_SEN_2");
	m_In[X_ULD_DOOR_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_DOOR_SEN_3].m_strIOName = _T("X_ULD_DOOR_SEN_3");
	m_In[X_ULD_DOOR_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_DOOR_SEN_4].m_strIOName = _T("X_ULD_DOOR_SEN_4");
	m_In[X_ULD_DOOR_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_DOOR_SEN_5].m_strIOName = _T("X_ULD_DOOR_SEN_5");
	m_In[X_ULD_DOOR_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;

	// 160 ~ 16F
	m_In[X_ULD_ROBOT_EMS_ALARM].m_strIOName = _T("X_ULD_ROBOT_EMS_ALARM");
	m_In[X_ULD_ROBOT_EMS_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_FAN_ALARM_SEN_1].m_strIOName = _T("X_ULD_FAN_ALARM_SEN_1");
	m_In[X_ULD_FAN_ALARM_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_FAN_ALARM_SEN_2].m_strIOName = _T("X_ULD_FAN_ALARM_SEN_2");
	m_In[X_ULD_FAN_ALARM_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_FAN_ALARM_SEN_3].m_strIOName = _T("X_ULD_FAN_ALARM_SEN_3");
	m_In[X_ULD_FAN_ALARM_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_FAN_ALARM_SEN_4].m_strIOName = _T("X_ULD_FAN_ALARM_SEN_4");
	m_In[X_ULD_FAN_ALARM_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LIFT_ARM_TRAY_SEN_1].m_strIOName = _T("X_NG_TRAY_LIFT_ARM_TRAY_SEN_1");
	m_In[X_NG_TRAY_LIFT_ARM_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LIFT_ARM_TRAY_SEN_2].m_strIOName = _T("X_NG_TRAY_LIFT_ARM_TRAY_SEN_2");
	m_In[X_NG_TRAY_LIFT_ARM_TRAY_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_LIFT_ARM_TRAY_SEN_1].m_strIOName = _T("X_NG_BUFFER_TRAY_LIFT_ARM_TRAY_SEN_1");
	m_In[X_NG_BUFFER_TRAY_LIFT_ARM_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_LIFT_ARM_TRAY_SEN_2].m_strIOName = _T("X_NG_BUFFER_TRAY_LIFT_ARM_TRAY_SEN_2");
	m_In[X_NG_BUFFER_TRAY_LIFT_ARM_TRAY_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_DOOR_SEN_6].m_strIOName = _T("X_ULD_DOOR_SEN_6");
	m_In[X_ULD_DOOR_SEN_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_BOX_TEMP_ALARM_SEN].m_strIOName = _T("X_ULD_BOX_TEMP_ALARM_SEN");
	m_In[X_ULD_BOX_TEMP_ALARM_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_16B].m_strIOName = _T("X_16B");
	m_In[X_16B].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_16C].m_strIOName = _T("X_16C");
	m_In[X_16C].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_IN_TRAY_LC_CHK].m_strIOName = _T("X_GOOD_IN_TRAY_LC_CHK");
	m_In[X_GOOD_IN_TRAY_LC_CHK].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_GOOD_OUT_TRAY_LC_CHK].m_strIOName = _T("X_GOOD_OUT_TRAY_LC_CHK");
	m_In[X_GOOD_OUT_TRAY_LC_CHK].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_NG_TRAY_LC_CHK].m_strIOName = _T("X_NG_TRAY_LC_CHK");
	m_In[X_NG_TRAY_LC_CHK].m_Check = CIOParam::CHECK_TYPE_B;

	// 170 ~ 17F
	m_In[X_170].m_strIOName = _T("X_170");
	m_In[X_170].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_171].m_strIOName = _T("X_171");
	m_In[X_171].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_172].m_strIOName = _T("X_172");
	m_In[X_172].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_173].m_strIOName = _T("X_173");
	m_In[X_173].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_174].m_strIOName = _T("X_174");
	m_In[X_174].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_175].m_strIOName = _T("X_175");
	m_In[X_175].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_176].m_strIOName = _T("X_176");
	m_In[X_176].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_177].m_strIOName = _T("X_177");
	m_In[X_177].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_178].m_strIOName = _T("X_178");
	m_In[X_178].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_179].m_strIOName = _T("X_179");
	m_In[X_179].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_17A].m_strIOName = _T("X_17A");
	m_In[X_17A].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_17B].m_strIOName = _T("X_17B");
	m_In[X_17B].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_17C].m_strIOName = _T("X_17C");
	m_In[X_17C].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_17D].m_strIOName = _T("X_17D");
	m_In[X_17D].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_17E].m_strIOName = _T("X_17E");
	m_In[X_17E].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_17F].m_strIOName = _T("X_17F");
	m_In[X_17F].m_Check = CIOParam::CHECK_TYPE_A;
#else
	// 000 ~ 00F
	m_In[X_EMS_SW_FRONT].m_strIOName = _T("X_EMS_SW_FRONT");
	m_In[X_EMS_SW_FRONT].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_EMS_SW_BACK].m_strIOName = _T("X_EMS_SW_BACK");
	m_In[X_EMS_SW_BACK].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_MC_POWER].m_strIOName = _T("X_MC_POWER");
	m_In[X_MC_POWER].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_MC_POWER_OFF].m_strIOName = _T("X_MC_POWER_OFF");
	m_In[X_MC_POWER_OFF].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_START_SW].m_strIOName = _T("X_START_SW");
	m_In[X_START_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_STOP_SW].m_strIOName = _T("X_STOP_SW");
	m_In[X_STOP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_RESET_SW].m_strIOName = _T("X_RESET_SW");
	m_In[X_RESET_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_TEACH_KEY_SW].m_strIOName = _T("X_TEACH_KEY_SW");
	m_In[X_TEACH_KEY_SW].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_LIGHT_CONTROLLER_SW].m_strIOName = _T("X_LIGHT_CONTROLLER_SW");
	m_In[X_LIGHT_CONTROLLER_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_ROBOT_EMS].m_strIOName = _T("X_LD_ROBOT_EMS");
	m_In[X_LD_ROBOT_EMS].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_ROBOT_EMS].m_strIOName = _T("X_ULD_ROBOT_EMS");
	m_In[X_ULD_ROBOT_EMS].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_ROBOT_GRIP_EMS_SW].m_strIOName = _T("X_LD_ROBOT_GRIP_EMS_SW");
	m_In[X_LD_ROBOT_GRIP_EMS_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_ROBOT_GRIP_EMS_SW].m_strIOName = _T("X_ULD_ROBOT_GRIP_EMS_SW");
	m_In[X_ULD_ROBOT_GRIP_EMS_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_00D].m_strIOName = _T("X_00D");
	m_In[X_00D].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_00E].m_strIOName = _T("X_00E");
	m_In[X_00E].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_DROP_CHK].m_strIOName = _T("X_GPS_DROP_CHK");
	m_In[X_GPS_DROP_CHK].m_Check = CIOParam::CHECK_TYPE_A;

	// 010 ~ 01F
	m_In[X_LD_ROBOT_GRIP_SW].m_strIOName = _T("X_LD_ROBOT_GRIP_SW");
	m_In[X_LD_ROBOT_GRIP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_ROBOT_GRIP_SW].m_strIOName = _T("X_ULD_ROBOT_GRIP_SW");
	m_In[X_ULD_ROBOT_GRIP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_012].m_strIOName = _T("X_012");
	m_In[X_012].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_013].m_strIOName = _T("X_013");
	m_In[X_013].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_FIRE_ALARM_SEN_1].m_strIOName = _T("X_FIRE_ALARM_SEN_1");
	m_In[X_FIRE_ALARM_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_FIRE_ALARM_SEN_2].m_strIOName = _T("X_FIRE_ALARM_SEN_2");
	m_In[X_FIRE_ALARM_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_FIRE_ALARM_SEN_3].m_strIOName = _T("X_FIRE_ALARM_SEN_3");
	m_In[X_FIRE_ALARM_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_FIRE_ALARM_SEN_4].m_strIOName = _T("X_FIRE_ALARM_SEN_4");
	m_In[X_FIRE_ALARM_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_DOOR_SEN_1].m_strIOName = _T("X_LD_DOOR_SEN_1");
	m_In[X_LD_DOOR_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_DOOR_SEN_2].m_strIOName = _T("X_LD_DOOR_SEN_2");
	m_In[X_LD_DOOR_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_DOOR_SEN_3].m_strIOName = _T("X_LD_DOOR_SEN_3");
	m_In[X_LD_DOOR_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_DOOR_SEN_4].m_strIOName = _T("X_LD_DOOR_SEN_4");
	m_In[X_LD_DOOR_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_DOOR_SEN_5].m_strIOName = _T("X_LD_DOOR_SEN_5");
	m_In[X_LD_DOOR_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_DOOR_SEN_6].m_strIOName = _T("X_LD_DOOR_SEN_6");
	m_In[X_LD_DOOR_SEN_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_01E].m_strIOName = _T("X_01E");
	m_In[X_01E].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_01F].m_strIOName = _T("X_01F");
	m_In[X_01F].m_Check = CIOParam::CHECK_TYPE_A;

	// 020 ~ 02F
	m_In[X_UPS_BOX_TEMP_ALARM_SEN_1].m_strIOName = _T("X_UPS_BOX_TEMP_ALARM_SEN_1");
	m_In[X_UPS_BOX_TEMP_ALARM_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_UPS_BOX_TEMP_ALARM_SEN_2].m_strIOName = _T("X_UPS_BOX_TEMP_ALARM_SEN_2");
	m_In[X_UPS_BOX_TEMP_ALARM_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_BOX_TEMP_ALARM_SEN_1].m_strIOName = _T("X_GPS_BOX_TEMP_ALARM_SEN_1");
	m_In[X_GPS_BOX_TEMP_ALARM_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_BOX_TEMP_ALARM_SEN_2].m_strIOName = _T("X_GPS_BOX_TEMP_ALARM_SEN_2");
	m_In[X_GPS_BOX_TEMP_ALARM_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_BOX_TEMP_ALARM_SEN].m_strIOName = _T("X_PC_BOX_TEMP_ALARM_SEN");
	m_In[X_PC_BOX_TEMP_ALARM_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_CONTROLLER_BOX_TEMP_ALARM_SEN].m_strIOName = _T("X_CONTROLLER_BOX_TEMP_ALARM_SEN");
	m_In[X_CONTROLLER_BOX_TEMP_ALARM_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_IO_BOX_TEMP_ALARM_SEN].m_strIOName = _T("X_IO_BOX_TEMP_ALARM_SEN");
	m_In[X_IO_BOX_TEMP_ALARM_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_027].m_strIOName = _T("X_027");
	m_In[X_027].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_028].m_strIOName = _T("X_028");
	m_In[X_028].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_029].m_strIOName = _T("X_029");
	m_In[X_029].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_02A].m_strIOName = _T("X_02A");
	m_In[X_02A].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_02B].m_strIOName = _T("X_02B");
	m_In[X_02B].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_02C].m_strIOName = _T("X_02C");
	m_In[X_02C].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_02D].m_strIOName = _T("X_02D");
	m_In[X_02D].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_ROBOT_EMS_ALARM].m_strIOName = _T("X_LD_ROBOT_EMS_ALARM");
	m_In[X_LD_ROBOT_EMS_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_EMS_SW_LEFT].m_strIOName = _T("X_EMS_SW_LEFT");
	m_In[X_EMS_SW_LEFT].m_Check = CIOParam::CHECK_TYPE_B;

	// 030 ~ 03F
	m_In[X_030].m_strIOName = _T("X_030");
	m_In[X_030].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_031].m_strIOName = _T("X_031");
	m_In[X_031].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_032].m_strIOName = _T("X_032");
	m_In[X_032].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_033].m_strIOName = _T("X_033");
	m_In[X_033].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_034].m_strIOName = _T("X_034");
	m_In[X_034].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_035].m_strIOName = _T("X_035");
	m_In[X_035].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_036].m_strIOName = _T("X_036");
	m_In[X_036].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_037].m_strIOName = _T("X_037");
	m_In[X_037].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_038].m_strIOName = _T("X_038");
	m_In[X_038].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_039].m_strIOName = _T("X_039");
	m_In[X_039].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_03A].m_strIOName = _T("X_03A");
	m_In[X_03A].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_03B].m_strIOName = _T("X_03B");
	m_In[X_03B].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_03C].m_strIOName = _T("X_03C");
	m_In[X_03C].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_03D].m_strIOName = _T("X_03D");
	m_In[X_03D].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_EFU_ALARM_SEN].m_strIOName = _T("X_EFU_ALARM_SEN");
	m_In[X_EFU_ALARM_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_03F].m_strIOName = _T("X_03F");
	m_In[X_03F].m_Check = CIOParam::CHECK_TYPE_A;

	// 040 ~ 04F
	m_In[X_040].m_strIOName = _T("X_040");
	m_In[X_040].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_ROBOT_KEY_SW].m_strIOName = _T("X_LD_ROBOT_KEY_SW");
	m_In[X_LD_ROBOT_KEY_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_ROBOT_VAC_SEN].m_strIOName = _T("X_LD_ROBOT_VAC_SEN");
	m_In[X_LD_ROBOT_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PA_TR_CH1_VAC_SEN].m_strIOName = _T("X_PA_TR_CH1_VAC_SEN");
	m_In[X_PA_TR_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PA_TR_CH2_VAC_SEN].m_strIOName = _T("X_PA_TR_CH2_VAC_SEN");
	m_In[X_PA_TR_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_TR_CH1_VAC_SEN].m_strIOName = _T("X_LD_TR_CH1_VAC_SEN");
	m_In[X_LD_TR_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_TR_CH2_VAC_SEN].m_strIOName = _T("X_LD_TR_CH2_VAC_SEN");
	m_In[X_LD_TR_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_UPPER_SHUTTLE_CH1_VAC_SEN].m_strIOName = _T("X_LD_UPPER_SHUTTLE_CH1_VAC_SEN");
	m_In[X_LD_UPPER_SHUTTLE_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_UPPER_SHUTTLE_CH2_VAC_SEN].m_strIOName = _T("X_LD_UPPER_SHUTTLE_CH2_VAC_SEN");
	m_In[X_LD_UPPER_SHUTTLE_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_LOWER_SHUTTLE_CH1_VAC_SEN].m_strIOName = _T("X_LD_LOWER_SHUTTLE_CH1_VAC_SEN");
	m_In[X_LD_LOWER_SHUTTLE_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_LOWER_SHUTTLE_CH2_VAC_SEN].m_strIOName = _T("X_LD_LOWER_SHUTTLE_CH2_VAC_SEN");
	m_In[X_LD_LOWER_SHUTTLE_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LOWER_MCR_READY].m_strIOName = _T("X_LOWER_MCR_READY");
	m_In[X_LOWER_MCR_READY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_UPPER_MCR_READY].m_strIOName = _T("X_UPPER_MCR_READY");
	m_In[X_UPPER_MCR_READY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PA_STG_CH1_VAC_SEN].m_strIOName = _T("X_PA_STG_CH1_VAC_SEN");
	m_In[X_PA_STG_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PA_STG_CH2_VAC_SEN].m_strIOName = _T("X_PA_STG_CH2_VAC_SEN");
	m_In[X_PA_STG_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_04F].m_strIOName = _T("X_04F");
	m_In[X_04F].m_Check = CIOParam::CHECK_TYPE_A;

	// 050 ~ 05F
	m_In[X_HOTLINE_ALIVE].m_strIOName = _T("X_HOTLINE_ALIVE");
	m_In[X_HOTLINE_ALIVE].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_EMERGENCY].m_strIOName = _T("X_HOTLINE_EMERGENCY");
	m_In[X_HOTLINE_EMERGENCY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_NET_READY].m_strIOName = _T("X_HOTLINE_NET_READY");
	m_In[X_HOTLINE_NET_READY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_RESERVED].m_strIOName = _T("X_HOTLINE_RESERVED");
	m_In[X_HOTLINE_RESERVED].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_INTERFACE_1].m_strIOName = _T("X_HOTLINE_INTERFACE_1");
	m_In[X_HOTLINE_INTERFACE_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_INTERFACE_2].m_strIOName = _T("X_HOTLINE_INTERFACE_2");
	m_In[X_HOTLINE_INTERFACE_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_INTERFACE_3].m_strIOName = _T("X_HOTLINE_INTERFACE_3");
	m_In[X_HOTLINE_INTERFACE_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HOTLINE_SUB_EMO].m_strIOName = _T("X_HOTLINE_SUB_EMO");
	m_In[X_HOTLINE_SUB_EMO].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_CONV_CELL_SEN_1].m_strIOName = _T("X_LD_CONV_CELL_SEN_1");
	m_In[X_LD_CONV_CELL_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_CONV_CELL_SEN_2].m_strIOName = _T("X_LD_CONV_CELL_SEN_2");
	m_In[X_LD_CONV_CELL_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_LD_CONV_CELL_SEN_3].m_strIOName = _T("X_LD_CONV_CELL_SEN_3");
	m_In[X_LD_CONV_CELL_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_DCR_GOOD].m_strIOName = _T("X_DCR_GOOD");
	m_In[X_DCR_GOOD].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_DCR_NG].m_strIOName = _T("X_DCR_NG");
	m_In[X_DCR_NG].m_Check = CIOParam::CHECK_TYPE_A;
	//2018-01-22,GHLEE, PASTAGEFPCBSENSOR 설치 대비
	m_In[X_PA_STAGE_CH1_FPCB_SEN].m_strIOName = _T("X_PA_STAGE_CH1_FPCB_SEN");
	m_In[X_PA_STAGE_CH1_FPCB_SEN].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_PA_STAGE_CH2_FPCB_SEN].m_strIOName = _T("X_PA_STAGE_CH2_FPCB_SEN");
	m_In[X_PA_STAGE_CH2_FPCB_SEN].m_Check = CIOParam::CHECK_TYPE_B;
	//2018-01-22,GHLEE, LDCONVFPCBSENSOR 설치 대비
	m_In[X_LD_CONV_FPCB_SEN].m_strIOName = _T("X_LD_CONV_FPCB_SEN");
	m_In[X_LD_CONV_FPCB_SEN].m_Check = CIOParam::CHECK_TYPE_B;

	// 060 ~ 06F
	m_In[X_PC_RACK_FAN_ALARM_SEN_1].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_1");
	m_In[X_PC_RACK_FAN_ALARM_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_2].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_2");
	m_In[X_PC_RACK_FAN_ALARM_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_3].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_3");
	m_In[X_PC_RACK_FAN_ALARM_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_4].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_4");
	m_In[X_PC_RACK_FAN_ALARM_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_5].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_5");
	m_In[X_PC_RACK_FAN_ALARM_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_6].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_6");
	m_In[X_PC_RACK_FAN_ALARM_SEN_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_7].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_7");
	m_In[X_PC_RACK_FAN_ALARM_SEN_7].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_8].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_8");
	m_In[X_PC_RACK_FAN_ALARM_SEN_8].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_9].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_9");
	m_In[X_PC_RACK_FAN_ALARM_SEN_9].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_10].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_10");
	m_In[X_PC_RACK_FAN_ALARM_SEN_10].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_11].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_11");
	m_In[X_PC_RACK_FAN_ALARM_SEN_11].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_12].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_12");
	m_In[X_PC_RACK_FAN_ALARM_SEN_12].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_13].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_13");
	m_In[X_PC_RACK_FAN_ALARM_SEN_13].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_14].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_14");
	m_In[X_PC_RACK_FAN_ALARM_SEN_14].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_15].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_15");
	m_In[X_PC_RACK_FAN_ALARM_SEN_15].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_PC_RACK_FAN_ALARM_SEN_16].m_strIOName = _T("X_PC_RACK_FAN_ALARM_SEN_16");
	m_In[X_PC_RACK_FAN_ALARM_SEN_16].m_Check = CIOParam::CHECK_TYPE_A;

	// 070 ~ 07F
	m_In[X_GPS_BOX_FAN_ALARM_1].m_strIOName = _T("X_GPS_BOX_FAN_ALARM_1");
	m_In[X_GPS_BOX_FAN_ALARM_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_BOX_FAN_ALARM_2].m_strIOName = _T("X_GPS_BOX_FAN_ALARM_2");
	m_In[X_GPS_BOX_FAN_ALARM_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_BOX_FAN_ALARM_3].m_strIOName = _T("X_GPS_BOX_FAN_ALARM_3");
	m_In[X_GPS_BOX_FAN_ALARM_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_BOX_FAN_ALARM_4].m_strIOName = _T("X_GPS_BOX_FAN_ALARM_4");
	m_In[X_GPS_BOX_FAN_ALARM_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_BOX_FAN_ALARM_5].m_strIOName = _T("X_GPS_BOX_FAN_ALARM_5");
	m_In[X_GPS_BOX_FAN_ALARM_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GPS_BOX_FAN_ALARM_6].m_strIOName = _T("X_GPS_BOX_FAN_ALARM_6");
	m_In[X_GPS_BOX_FAN_ALARM_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_UPS_BOX_FAN_ALARM_1].m_strIOName = _T("X_UPS_BOX_FAN_ALARM_1");
	m_In[X_UPS_BOX_FAN_ALARM_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_UPS_BOX_FAN_ALARM_2].m_strIOName = _T("X_UPS_BOX_FAN_ALARM_2");
	m_In[X_UPS_BOX_FAN_ALARM_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_UPS_BOX_FAN_ALARM_3].m_strIOName = _T("X_UPS_BOX_FAN_ALARM_3");
	m_In[X_UPS_BOX_FAN_ALARM_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_UPS_BOX_FAN_ALARM_4].m_strIOName = _T("X_UPS_BOX_FAN_ALARM_4");
	m_In[X_UPS_BOX_FAN_ALARM_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_C_BOX_FAN_ALARM_1].m_strIOName = _T("X_C_BOX_FAN_ALARM_1");
	m_In[X_C_BOX_FAN_ALARM_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_C_BOX_FAN_ALARM_2].m_strIOName = _T("X_C_BOX_FAN_ALARM_2");
	m_In[X_C_BOX_FAN_ALARM_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_C_BOX_FAN_ALARM_3].m_strIOName = _T("X_C_BOX_FAN_ALARM_3");
	m_In[X_C_BOX_FAN_ALARM_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_C_BOX_FAN_ALARM_4].m_strIOName = _T("X_C_BOX_FAN_ALARM_4");
	m_In[X_C_BOX_FAN_ALARM_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_07E].m_strIOName = _T("X_07E");
	m_In[X_07E].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_07F].m_strIOName = _T("X_07F");
	m_In[X_07F].m_Check = CIOParam::CHECK_TYPE_A;

	// 080 ~ 08F
	m_In[X_080].m_strIOName = _T("X_080");
	m_In[X_080].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_A_JIG_CH1_VAC_SEN].m_strIOName = _T("X_A_JIG_CH1_VAC_SEN");
	m_In[X_A_JIG_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_A_JIG_CH2_VAC_SEN].m_strIOName = _T("X_A_JIG_CH2_VAC_SEN");
	m_In[X_A_JIG_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_083].m_strIOName = _T("X_083");
	m_In[X_083].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_B_JIG_CH1_VAC_SEN].m_strIOName = _T("X_B_JIG_CH1_VAC_SEN");
	m_In[X_B_JIG_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_B_JIG_CH2_VAC_SEN].m_strIOName = _T("X_B_JIG_CH2_VAC_SEN");
	m_In[X_B_JIG_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_086].m_strIOName = _T("X_086");
	m_In[X_086].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_C_JIG_CH1_VAC_SEN].m_strIOName = _T("X_C_JIG_CH1_VAC_SEN");
	m_In[X_C_JIG_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_C_JIG_CH2_VAC_SEN].m_strIOName = _T("X_C_JIG_CH2_VAC_SEN");
	m_In[X_C_JIG_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_089].m_strIOName = _T("X_089");
	m_In[X_089].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_D_JIG_CH1_VAC_SEN].m_strIOName = _T("X_D_JIG_CH1_VAC_SEN");
	m_In[X_D_JIG_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_D_JIG_CH2_VAC_SEN].m_strIOName = _T("X_D_JIG_CH2_VAC_SEN");
	m_In[X_D_JIG_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_08C].m_strIOName = _T("X_08C");
	m_In[X_08C].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_08D].m_strIOName = _T("X_08D");
	m_In[X_08D].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_08E].m_strIOName = _T("X_08E");
	m_In[X_08E].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_08F].m_strIOName = _T("X_08F");
	m_In[X_08F].m_Check = CIOParam::CHECK_TYPE_A;


	// 090 ~ 09F
	m_In[X_090].m_strIOName = _T("X_090");
	m_In[X_090].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_091].m_strIOName = _T("X_091");
	m_In[X_091].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_092].m_strIOName = _T("X_092");
	m_In[X_092].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_093].m_strIOName = _T("X_093");
	m_In[X_093].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_094].m_strIOName = _T("X_094");
	m_In[X_094].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_095].m_strIOName = _T("X_095");
	m_In[X_095].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_096].m_strIOName = _T("X_096");
	m_In[X_096].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_097].m_strIOName = _T("X_097");
	m_In[X_097].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_098].m_strIOName = _T("X_098");
	m_In[X_098].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_099].m_strIOName = _T("X_099");
	m_In[X_099].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_09A].m_strIOName = _T("X_09A");
	m_In[X_09A].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_09B].m_strIOName = _T("X_09B");
	m_In[X_09B].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_09C].m_strIOName = _T("X_09C");
	m_In[X_09C].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_09D].m_strIOName = _T("X_09D");
	m_In[X_09D].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_09E].m_strIOName = _T("X_09E");
	m_In[X_09E].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_09F].m_strIOName = _T("X_09F");
	m_In[X_09F].m_Check = CIOParam::CHECK_TYPE_A;

	// 0A0 ~ 0AF
	m_In[X_0A0].m_strIOName = _T("X_0A0");
	m_In[X_0A0].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0A1].m_strIOName = _T("X_0A1");
	m_In[X_0A1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_IN_SW].m_strIOName = _T("X_GOOD_ULD_TRAY_IN_SW");
	m_In[X_GOOD_ULD_TRAY_IN_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_OUT_SW].m_strIOName = _T("X_GOOD_ULD_TRAY_OUT_SW");
	m_In[X_GOOD_ULD_TRAY_OUT_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_MUTE_SW].m_strIOName = _T("X_GOOD_ULD_TRAY_MUTE_SW");
	m_In[X_GOOD_ULD_TRAY_MUTE_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_IN_SW].m_strIOName = _T("X_GOOD_LD_TRAY_IN_SW");
	m_In[X_GOOD_LD_TRAY_IN_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_OUT_SW].m_strIOName = _T("X_GOOD_LD_TRAY_OUT_SW");
	m_In[X_GOOD_LD_TRAY_OUT_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_MUTE_SW].m_strIOName = _T("X_GOOD_LD_TRAY_MUTE_SW");
	m_In[X_GOOD_LD_TRAY_MUTE_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_IN_REQ_SW].m_strIOName = _T("X_NG_TRAY_IN_REQ_SW");
	m_In[X_NG_TRAY_IN_REQ_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_IN_COMP_SW].m_strIOName = _T("X_NG_TRAY_IN_COMP_SW");
	m_In[X_NG_TRAY_IN_COMP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_MUTE_SW].m_strIOName = _T("X_NG_TRAY_MUTE_SW");
	m_In[X_NG_TRAY_MUTE_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_TR_CH1_VAC_SEN].m_strIOName = _T("X_ULD_TR_CH1_VAC_SEN");
	m_In[X_ULD_TR_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_TR_CH2_VAC_SEN].m_strIOName = _T("X_ULD_TR_CH2_VAC_SEN");
	m_In[X_ULD_TR_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_STAGE_CH1_VAC_SEN].m_strIOName = _T("X_ULD_STAGE_CH1_VAC_SEN");
	m_In[X_ULD_STAGE_CH1_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_STAGE_CH2_VAC_SEN].m_strIOName = _T("X_ULD_STAGE_CH2_VAC_SEN");
	m_In[X_ULD_STAGE_CH2_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_ROBOT_VAC_SEN].m_strIOName = _T("X_ULD_ROBOT_VAC_SEN");
	m_In[X_ULD_ROBOT_VAC_SEN].m_Check = CIOParam::CHECK_TYPE_A;

	// 0B0 ~ 0BF
	m_In[X_GOOD_TRAY_TR_VAC_SEN_1].m_strIOName = _T("X_GOOD_TRAY_TR_VAC_SEN_1");
	m_In[X_GOOD_TRAY_TR_VAC_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0B1].m_strIOName = _T("X_0B1");
	m_In[X_0B1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_TR_VAC_SEN_1].m_strIOName = _T("X_NG_TRAY_TR_VAC_SEN_1");
	m_In[X_NG_TRAY_TR_VAC_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0B3].m_strIOName = _T("X_0B3");
	m_In[X_0B3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0B4].m_strIOName = _T("X_0B4");
	m_In[X_0B4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0B5].m_strIOName = _T("X_0B5");
	m_In[X_0B5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0B6].m_strIOName = _T("X_0B6");
	m_In[X_0B6].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0B7].m_strIOName = _T("X_0B7");
	m_In[X_0B7].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0B8].m_strIOName = _T("X_0B8");
	m_In[X_0B8].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0B9].m_strIOName = _T("X_0B9");
	m_In[X_0B9].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0BA].m_strIOName = _T("X_0BA");
	m_In[X_0BA].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0BB].m_strIOName = _T("X_0BB");
	m_In[X_0BB].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0BC].m_strIOName = _T("X_0BC");
	m_In[X_0BC].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0BD].m_strIOName = _T("X_0BD");
	m_In[X_0BD].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0BE].m_strIOName = _T("X_0BE");
	m_In[X_0BE].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0BF].m_strIOName = _T("X_0BF");
	m_In[X_0BF].m_Check = CIOParam::CHECK_TYPE_A;

	// 0C0 ~ 0CF
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1");
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1");
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2");
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2");
	m_In[X_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SEN_1].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SEN_1");
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SEN_1].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SEN_1");
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SEN_2].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SEN_2");
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SEN_2].m_strIOName = _T("X_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SEN_2");
	m_In[X_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4");
	m_In[X_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;

	// 0D0 ~ 0DF
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1");
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1");
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2");
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2");
	m_In[X_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1");
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1");
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2");
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2");
	m_In[X_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_UP_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_STOPPER_UP_SEN_1");
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_UP_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SEN_1");
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_UP_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_STOPPER_UP_SEN_2");
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_UP_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SEN_2");
	m_In[X_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_OUT_REQ_SW].m_strIOName = _T("X_NG_TRAY_OUT_REQ_SW");
	m_In[X_NG_TRAY_OUT_REQ_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_OUT_COMP_SW].m_strIOName = _T("X_NG_TRAY_OUT_COMP_SW");
	m_In[X_NG_TRAY_OUT_COMP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0DE].m_strIOName = _T("X_0DE");
	m_In[X_0DE].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_0DF].m_strIOName = _T("X_0DF");
	m_In[X_0DF].m_Check = CIOParam::CHECK_TYPE_A;


	// 0E0 ~ 0EF
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4].m_strIOName = _T("X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4");
	m_In[X_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1");
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1");
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2");
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2");
	m_In[X_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1");
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1");
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2");
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2");
	m_In[X_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_B;

	// 0F0 ~ 0FF
	m_In[X_NG_TRAY_LOWER_STOPPER_UP_SEN_1].m_strIOName = _T("X_NG_TRAY_LOWER_STOPPER_UP_SEN_1");
	m_In[X_NG_TRAY_LOWER_STOPPER_UP_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LOWER_STOPPER_DOWN_SEN_1].m_strIOName = _T("X_NG_TRAY_LOWER_STOPPER_DOWN_SEN_1");
	m_In[X_NG_TRAY_LOWER_STOPPER_DOWN_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LOWER_STOPPER_UP_SEN_2].m_strIOName = _T("X_NG_TRAY_LOWER_STOPPER_UP_SEN_2");
	m_In[X_NG_TRAY_LOWER_STOPPER_UP_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LOWER_STOPPER_DOWN_SEN_2].m_strIOName = _T("X_NG_TRAY_LOWER_STOPPER_DOWN_SEN_2");
	m_In[X_NG_TRAY_LOWER_STOPPER_DOWN_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_ARM_FORWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_ARM_FORWARD_SEN_1");
	m_In[X_NG_TRAY_ARM_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_ARM_BACKWARD_SEN_1].m_strIOName = _T("X_NG_TRAY_ARM_BACKWARD_SEN_1");
	m_In[X_NG_TRAY_ARM_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_ARM_FORWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_ARM_FORWARD_SEN_2");
	m_In[X_NG_TRAY_ARM_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_ARM_BACKWARD_SEN_2].m_strIOName = _T("X_NG_TRAY_ARM_BACKWARD_SEN_2");
	m_In[X_NG_TRAY_ARM_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_ARM_FORWARD_SEN_1].m_strIOName = _T("X_NG_BUFFER_TRAY_ARM_FORWARD_SEN_1");
	m_In[X_NG_BUFFER_TRAY_ARM_FORWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_ARM_BACKWARD_SEN_1].m_strIOName = _T("X_NG_BUFFER_TRAY_ARM_BACKWARD_SEN_1");
	m_In[X_NG_BUFFER_TRAY_ARM_BACKWARD_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_ARM_FORWARD_SEN_2].m_strIOName = _T("X_NG_BUFFER_TRAY_ARM_FORWARD_SEN_2");
	m_In[X_NG_BUFFER_TRAY_ARM_FORWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_ARM_BACKWARD_SEN_2].m_strIOName = _T("X_NG_BUFFER_TRAY_ARM_BACKWARD_SEN_2");
	m_In[X_NG_BUFFER_TRAY_ARM_BACKWARD_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_TRAY_UP_SEN].m_strIOName = _T("X_NG_TRAY_TRAY_UP_SEN");
	m_In[X_NG_TRAY_TRAY_UP_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_TRAY_DOWN_SEN].m_strIOName = _T("X_NG_TRAY_TRAY_DOWN_SEN");
	m_In[X_NG_TRAY_TRAY_DOWN_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_TRAY_UP_SEN].m_strIOName = _T("X_NG_BUFFER_TRAY_TRAY_UP_SEN");
	m_In[X_NG_BUFFER_TRAY_TRAY_UP_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_TRAY_DOWN_SEN].m_strIOName = _T("X_NG_BUFFER_TRAY_TRAY_DOWN_SEN");
	m_In[X_NG_BUFFER_TRAY_TRAY_DOWN_SEN].m_Check = CIOParam::CHECK_TYPE_A;

	// 100 ~ 10F
	m_In[X_GOOD_ULD_TRAY_LIFT_SEN].m_strIOName = _T("X_GOOD_ULD_TRAY_LIFT_SEN");
	m_In[X_GOOD_ULD_TRAY_LIFT_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LIFT_SEN].m_strIOName = _T("X_GOOD_LD_TRAY_LIFT_SEN");
	m_In[X_GOOD_LD_TRAY_LIFT_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_1].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_SEN_1");
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_103].m_strIOName = _T("X_103");
	m_In[X_103].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_104].m_strIOName = _T("X_104");
	m_In[X_104].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_4].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_SEN_4");
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_5].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_SEN_5");
	m_In[X_GOOD_ULD_CONV_TRAY_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_1].m_strIOName = _T("X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_1");
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_108].m_strIOName = _T("X_108");
	m_In[X_108].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_109].m_strIOName = _T("X_109");
	m_In[X_109].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_4].m_strIOName = _T("X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_4");
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_5].m_strIOName = _T("X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_5");
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_SEN_1].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_SEN_1");
	m_In[X_GOOD_LD_CONV_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_10D].m_strIOName = _T("X_10D");
	m_In[X_10D].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_10E].m_strIOName = _T("X_10E");
	m_In[X_10E].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_SEN_4].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_SEN_4");
	m_In[X_GOOD_LD_CONV_TRAY_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;

	//110 ~ 11F
	m_In[X_GOOD_LD_CONV_TRAY_SEN_5].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_SEN_5");
	m_In[X_GOOD_LD_CONV_TRAY_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_1].m_strIOName = _T("X_GOOD_LD_BUFFER_CONV_TRAY_SEN_1");
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_112].m_strIOName = _T("X_112");
	m_In[X_112].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_DOOR_SEN_6].m_strIOName = _T("X_ULD_DOOR_SEN_6");
	m_In[X_ULD_DOOR_SEN_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_4].m_strIOName = _T("X_GOOD_LD_BUFFER_CONV_TRAY_SEN_4");
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_5].m_strIOName = _T("X_GOOD_LD_BUFFER_CONV_TRAY_SEN_5");
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_SEN_1].m_strIOName = _T("X_NG_CONV_TRAY_SEN_1");
	m_In[X_NG_CONV_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_SEN_2].m_strIOName = _T("X_NG_CONV_TRAY_SEN_2");
	m_In[X_NG_CONV_TRAY_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_SEN_3].m_strIOName = _T("X_NG_CONV_TRAY_SEN_3");
	m_In[X_NG_CONV_TRAY_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_SEN_4].m_strIOName = _T("X_NG_CONV_TRAY_SEN_4");
	m_In[X_NG_CONV_TRAY_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_SEN_5].m_strIOName = _T("X_NG_CONV_TRAY_SEN_5");
	m_In[X_NG_CONV_TRAY_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_1].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_SEN_1");
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_2].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_SEN_2");
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_3].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_SEN_3");
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_4].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_SEN_4");
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_5].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_SEN_5");
	m_In[X_NG_BUFFER_CONV_TRAY_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;

	// 120 ~ 12F
	m_In[X_FIRE_ALARM_SEN_5].m_strIOName = _T("X_FIRE_ALARM_SEN_5");
	m_In[X_FIRE_ALARM_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_121].m_strIOName = _T("X_121");
	m_In[X_121].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_121].m_strIOName = _T("X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_OUT1");
	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_OUT1].m_Check = CIOParam::CHECK_TYPE_A;

	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_OUT2].m_strIOName = _T("X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_OUT2");
	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_OUT2].m_Check = CIOParam::CHECK_TYPE_A;

	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_3].m_strIOName = _T("X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_3");
	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_2].m_strIOName = _T("X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_2");
	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_2].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_1");
	m_In[X_GOOD_LD_TRAY_LIFT_LIMIT_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_127].m_strIOName = _T("X_127");
	m_In[X_127].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LIFT_LIMIT_SEN_3].m_strIOName = _T("X_NG_TRAY_LIFT_LIMIT_SEN_3");
	m_In[X_NG_TRAY_LIFT_LIMIT_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LIFT_LIMIT_SEN_2].m_strIOName = _T("X_NG_TRAY_LIFT_LIMIT_SEN_2");
	m_In[X_NG_TRAY_LIFT_LIMIT_SEN_2].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_NG_TRAY_LIFT_LIMIT_SEN_1].m_strIOName = _T("X_NG_TRAY_LIFT_LIMIT_SEN_1");
	m_In[X_NG_TRAY_LIFT_LIMIT_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_12B].m_strIOName = _T("X_12B");
	m_In[X_12B].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_FINAL_SEN_1].m_strIOName = _T("X_GOOD_LD_TRAY_FINAL_SEN_1");
	m_In[X_GOOD_LD_TRAY_FINAL_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HYBRID_CONV_READY].m_strIOName = _T("X_HYBRID_CONV_READY");
	m_In[X_HYBRID_CONV_READY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HYBRID_CONV_RUN].m_strIOName = _T("X_HYBRID_CONV_RUN");
	m_In[X_HYBRID_CONV_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_HYBRID_CONV_INTERFACE].m_strIOName = _T("X_HYBRID_CONV_INTERFACE");
	m_In[X_HYBRID_CONV_INTERFACE].m_Check = CIOParam::CHECK_TYPE_A;

	// 130 ~ 13F
	m_In[X_GOOD_ULD_CONV_TRAY_INVERTER_RUN].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_INVERTER_RUN");
	m_In[X_GOOD_ULD_CONV_TRAY_INVERTER_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_INVERTER_ALARM].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_INVERTER_ALARM");
	m_In[X_GOOD_ULD_CONV_TRAY_INVERTER_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_RUN].m_strIOName = _T("X_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_RUN");
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_ALARM].m_strIOName = _T("X_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_ALARM");
	m_In[X_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_INVERTER_RUN].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_INVERTER_RUN");
	m_In[X_GOOD_LD_CONV_TRAY_INVERTER_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_INVERTER_ALARM].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_INVERTER_ALARM");
	m_In[X_GOOD_LD_CONV_TRAY_INVERTER_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_RUN].m_strIOName = _T("X_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_RUN");
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_ALARM].m_strIOName = _T("X_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_ALARM");
	m_In[X_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_INVERTER_RUN].m_strIOName = _T("X_NG_CONV_TRAY_INVERTER_RUN");
	m_In[X_NG_CONV_TRAY_INVERTER_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_INVERTER_ALARM].m_strIOName = _T("X_NG_CONV_TRAY_INVERTER_ALARM");
	m_In[X_NG_CONV_TRAY_INVERTER_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_INVERTER_RUN].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_INVERTER_RUN");
	m_In[X_NG_BUFFER_CONV_TRAY_INVERTER_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_CONV_TRAY_INVERTER_ALARM].m_strIOName = _T("X_NG_BUFFER_CONV_TRAY_INVERTER_ALARM");
	m_In[X_NG_BUFFER_CONV_TRAY_INVERTER_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_TRAY_ORG_MISS_SEN].m_strIOName = _T("X_GOOD_ULD_TRAY_ORG_MISS_SEN");
	m_In[X_GOOD_ULD_TRAY_ORG_MISS_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_TRAY_ORG_MISS_SEN].m_strIOName = _T("X_GOOD_LD_TRAY_ORG_MISS_SEN");
	m_In[X_GOOD_LD_TRAY_ORG_MISS_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_ORG_MISS_SENSOR].m_strIOName = _T("X_NG_TRAY_ORG_MISS_SENSOR");
	m_In[X_NG_TRAY_ORG_MISS_SENSOR].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_BUFFER_ORG_MISS_SENSOR].m_strIOName = _T("X_NG_TRAY_BUFFER_ORG_MISS_SENSOR");
	m_In[X_NG_TRAY_BUFFER_ORG_MISS_SENSOR].m_Check = CIOParam::CHECK_TYPE_A;

	// 140 ~ 14F
	m_In[X_GOOD_LD_CONV_TRAY_PIO_GO].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_GO");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_GO].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_REQ].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_REQ");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_REQ].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_CONNECTION].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_CONNECTION");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_CONNECTION].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_BUSY].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_BUSY");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_BUSY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_COMP].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_COMP");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_COMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT5].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_OUT5");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT6].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_OUT6");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT6].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT7].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_OUT7");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT7].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT8].m_strIOName = _T("X_GOOD_LD_CONV_TRAY_PIO_OUT8");
	m_In[X_GOOD_LD_CONV_TRAY_PIO_OUT8].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_GO].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_GO");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_GO].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_REQ].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_REQ");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_REQ].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_CONNECTION].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_CONNECTION");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_CONNECTION].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_BUSY].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_BUSY");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_BUSY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_COMP].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_COMP");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_COMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT5].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_OUT5");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT6].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_OUT6");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT6].m_Check = CIOParam::CHECK_TYPE_A;

	// 150 ~ 15F
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT7].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_OUT7");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT7].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT8].m_strIOName = _T("X_GOOD_ULD_CONV_TRAY_PIO_OUT8");
	m_In[X_GOOD_ULD_CONV_TRAY_PIO_OUT8].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_GO].m_strIOName = _T("X_NG_CONV_TRAY_PIO_GO");
	m_In[X_NG_CONV_TRAY_PIO_GO].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_REQ].m_strIOName = _T("X_NG_CONV_TRAY_PIO_REQ");
	m_In[X_NG_CONV_TRAY_PIO_REQ].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_CONNECTION].m_strIOName = _T("X_NG_CONV_TRAY_PIO_CONNECTION");
	m_In[X_NG_CONV_TRAY_PIO_CONNECTION].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_BUSY].m_strIOName = _T("X_NG_CONV_TRAY_PIO_BUSY");
	m_In[X_NG_CONV_TRAY_PIO_BUSY].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_COMP].m_strIOName = _T("X_NG_CONV_TRAY_PIO_COMP");
	m_In[X_NG_CONV_TRAY_PIO_COMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_OUT5].m_strIOName = _T("X_NG_CONV_TRAY_PIO_OUT5");
	m_In[X_NG_CONV_TRAY_PIO_OUT5].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_OUT6].m_strIOName = _T("X_NG_CONV_TRAY_PIO_OUT6");
	m_In[X_NG_CONV_TRAY_PIO_OUT6].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_OUT7].m_strIOName = _T("X_NG_CONV_TRAY_PIO_OUT7");
	m_In[X_NG_CONV_TRAY_PIO_OUT7].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_CONV_TRAY_PIO_OUT8].m_strIOName = _T("X_NG_CONV_TRAY_PIO_OUT8");
	m_In[X_NG_CONV_TRAY_PIO_OUT8].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_DOOR_SEN_1].m_strIOName = _T("X_ULD_DOOR_SEN_1");
	m_In[X_ULD_DOOR_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_DOOR_SEN_2].m_strIOName = _T("X_ULD_DOOR_SEN_2");
	m_In[X_ULD_DOOR_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_DOOR_SEN_3].m_strIOName = _T("X_ULD_DOOR_SEN_3");
	m_In[X_ULD_DOOR_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_DOOR_SEN_4].m_strIOName = _T("X_ULD_DOOR_SEN_4");
	m_In[X_ULD_DOOR_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_DOOR_SEN_5].m_strIOName = _T("X_ULD_DOOR_SEN_5");
	m_In[X_ULD_DOOR_SEN_5].m_Check = CIOParam::CHECK_TYPE_A;

	// 160 ~ 16F
	m_In[X_ULD_ROBOT_EMS_ALARM].m_strIOName = _T("X_ULD_ROBOT_EMS_ALARM");
	m_In[X_ULD_ROBOT_EMS_ALARM].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_FAN_ALARM_SEN_1].m_strIOName = _T("X_ULD_FAN_ALARM_SEN_1");
	m_In[X_ULD_FAN_ALARM_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_FAN_ALARM_SEN_2].m_strIOName = _T("X_ULD_FAN_ALARM_SEN_2");
	m_In[X_ULD_FAN_ALARM_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_FAN_ALARM_SEN_3].m_strIOName = _T("X_ULD_FAN_ALARM_SEN_3");
	m_In[X_ULD_FAN_ALARM_SEN_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_FAN_ALARM_SEN_4].m_strIOName = _T("X_ULD_FAN_ALARM_SEN_4");
	m_In[X_ULD_FAN_ALARM_SEN_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LIFT_ARM_TRAY_SEN_1].m_strIOName = _T("X_NG_TRAY_LIFT_ARM_TRAY_SEN_1");
	m_In[X_NG_TRAY_LIFT_ARM_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_TRAY_LIFT_ARM_TRAY_SEN_2].m_strIOName = _T("X_NG_TRAY_LIFT_ARM_TRAY_SEN_2");
	m_In[X_NG_TRAY_LIFT_ARM_TRAY_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_LIFT_ARM_TRAY_SEN_1].m_strIOName = _T("X_NG_BUFFER_TRAY_LIFT_ARM_TRAY_SEN_1");
	m_In[X_NG_BUFFER_TRAY_LIFT_ARM_TRAY_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_NG_BUFFER_TRAY_LIFT_ARM_TRAY_SEN_2].m_strIOName = _T("X_NG_BUFFER_TRAY_LIFT_ARM_TRAY_SEN_2");
	m_In[X_NG_BUFFER_TRAY_LIFT_ARM_TRAY_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_169].m_strIOName = _T("X_169");
	m_In[X_169].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_ULD_BOX_TEMP_ALARM_SEN].m_strIOName = _T("X_ULD_BOX_TEMP_ALARM_SEN");
	m_In[X_ULD_BOX_TEMP_ALARM_SEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_16B].m_strIOName = _T("X_16B");
	m_In[X_16B].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_16C].m_strIOName = _T("X_16C");
	m_In[X_16C].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_GOOD_OUT_TRAY_LC_CHK].m_strIOName = _T("X_GOOD_OUT_TRAY_LC_CHK");
	m_In[X_GOOD_OUT_TRAY_LC_CHK].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_GOOD_IN_TRAY_LC_CHK].m_strIOName = _T("X_GOOD_IN_TRAY_LC_CHK");
	m_In[X_GOOD_IN_TRAY_LC_CHK].m_Check = CIOParam::CHECK_TYPE_B;
	m_In[X_NG_TRAY_LC_CHK].m_strIOName = _T("X_NG_TRAY_LC_CHK");
	m_In[X_NG_TRAY_LC_CHK].m_Check = CIOParam::CHECK_TYPE_B;

	// 170 ~ 17F
	m_In[X_MAIN_AIR_SEN_1].m_strIOName = _T("X_MAIN_AIR_SEN_1");
	m_In[X_MAIN_AIR_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_MAIN_AIR_SEN_2].m_strIOName = _T("X_MAIN_AIR_SEN_2");
	m_In[X_MAIN_AIR_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_MAIN_VAC_SEN_1].m_strIOName = _T("X_MAIN_VAC_SEN_1");
	m_In[X_MAIN_VAC_SEN_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_MAIN_VAC_SEN_2].m_strIOName = _T("X_MAIN_VAC_SEN_2");
	m_In[X_MAIN_VAC_SEN_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_174].m_strIOName = _T("X_174");
	m_In[X_174].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_175].m_strIOName = _T("X_175");
	m_In[X_175].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_176].m_strIOName = _T("X_176");
	m_In[X_176].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_177].m_strIOName = _T("X_177");
	m_In[X_177].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_178].m_strIOName = _T("X_178");
	m_In[X_178].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_179].m_strIOName = _T("X_179");
	m_In[X_179].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_17A].m_strIOName = _T("X_17A");
	m_In[X_17A].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_17B].m_strIOName = _T("X_17B");
	m_In[X_17B].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_17C].m_strIOName = _T("X_17C");
	m_In[X_17C].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_17D].m_strIOName = _T("X_17D");
	m_In[X_17D].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_17E].m_strIOName = _T("X_17E");
	m_In[X_17E].m_Check = CIOParam::CHECK_TYPE_A;
	m_In[X_17F].m_strIOName = _T("X_17F");
	m_In[X_17F].m_Check = CIOParam::CHECK_TYPE_A;
#endif
}

void CIOParamBank::InitializeIOParam_OUT()
{
	//OUTPUT//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#if (AMT_TYPE == 1)
	//Y000 ~ Y00F
	m_Out[Y_000].m_strIOName = _T("Y_000");
	m_Out[Y_000].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_001].m_strIOName = _T("Y_001");
	m_Out[Y_001].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_START_SW_LAMP].m_strIOName = _T("Y_START_SW_LAMP");
	m_Out[Y_START_SW_LAMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_STOP_SW_LAMP].m_strIOName = _T("Y_STOP_SW_LAMP");
	m_Out[Y_STOP_SW_LAMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_RESET_SW_LAMP].m_strIOName = _T("Y_RESET_SW_LAMP");
	m_Out[Y_RESET_SW_LAMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_TOWER_LAMP_RED].m_strIOName = _T("Y_TOWER_LAMP_RED");
	m_Out[Y_TOWER_LAMP_RED].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_TOWER_LAMP_YELLOW].m_strIOName = _T("Y_TOWER_LAMP_YELLOW");
	m_Out[Y_TOWER_LAMP_YELLOW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_TOWER_LAMP_GREEN].m_strIOName = _T("Y_TOWER_LAMP_GREEN");
	m_Out[Y_TOWER_LAMP_GREEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_008].m_strIOName = _T("Y_008");
	m_Out[Y_008].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_BUZZER_K1].m_strIOName = _T("Y_BUZZER_K1");
	m_Out[Y_BUZZER_K1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_BUZZER_K2].m_strIOName = _T("Y_BUZZER_K2");
	m_Out[Y_BUZZER_K2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_BUZZER_K3].m_strIOName = _T("Y_BUZZER_K3");
	m_Out[Y_BUZZER_K3].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_BUZZER_K4].m_strIOName = _T("Y_BUZZER_K4");
	m_Out[Y_BUZZER_K4].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LIGHT_ON].m_strIOName = _T("Y_LIGHT_ON");
	m_Out[Y_LIGHT_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_00E].m_strIOName = _T("Y_00E");
	m_Out[Y_00E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_00F].m_strIOName = _T("Y_00F");
	m_Out[Y_00F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y010 ~ Y01F
	m_Out[Y_LD_DOOR_UNLOCK_1].m_strIOName = _T("Y_LD_DOOR_UNLOCK_1");
	m_Out[Y_LD_DOOR_UNLOCK_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_DOOR_UNLOCK_2].m_strIOName = _T("Y_LD_DOOR_UNLOCK_2");
	m_Out[Y_LD_DOOR_UNLOCK_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_DOOR_UNLOCK_3].m_strIOName = _T("Y_LD_DOOR_UNLOCK_3");
	m_Out[Y_LD_DOOR_UNLOCK_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_DOOR_UNLOCK_4].m_strIOName = _T("Y_LD_DOOR_UNLOCK_4");
	m_Out[Y_LD_DOOR_UNLOCK_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_DOOR_UNLOCK_5].m_strIOName = _T("Y_LD_DOOR_UNLOCK_5");
	m_Out[Y_LD_DOOR_UNLOCK_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_DOOR_UNLOCK_6].m_strIOName = _T("Y_LD_DOOR_UNLOCK_6");
	m_Out[Y_LD_DOOR_UNLOCK_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_016].m_strIOName = _T("Y_016");
	m_Out[Y_016].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_017].m_strIOName = _T("Y_017");
	m_Out[Y_017].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_018].m_strIOName = _T("Y_018");
	m_Out[Y_018].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_019].m_strIOName = _T("Y_019");
	m_Out[Y_019].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_01A].m_strIOName = _T("Y_01A");
	m_Out[Y_01A].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_01B].m_strIOName = _T("Y_01B");
	m_Out[Y_01B].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_01C].m_strIOName = _T("Y_01C");
	m_Out[Y_01C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_01D].m_strIOName = _T("Y_01D");
	m_Out[Y_01D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_01E].m_strIOName = _T("Y_01E");
	m_Out[Y_01E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_01F].m_strIOName = _T("Y_01F");
	m_Out[Y_01F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y020 ~ Y02F
	m_Out[Y_LD_ROBOT_BLOW_ON_SOL].m_strIOName = _T("Y_LD_ROBOT_BLOW_ON_SOL");
	m_Out[Y_LD_ROBOT_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_ROBOT_VAC_ON_SOL].m_strIOName = _T("Y_LD_ROBOT_VAC_ON_SOL");
	m_Out[Y_LD_ROBOT_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_ROBOT_FPCB_USE_SOL].m_strIOName = _T("Y_LD_ROBOT_FPCB_USE_SOL");
	m_Out[Y_LD_ROBOT_FPCB_USE_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_TR_CH1_BLOW_ON_SOL].m_strIOName = _T("Y_PA_TR_CH1_BLOW_ON_SOL");
	m_Out[Y_PA_TR_CH1_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_TR_CH1_VAC_ON_SOL].m_strIOName = _T("Y_PA_TR_CH1_VAC_ON_SOL");
	m_Out[Y_PA_TR_CH1_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_TR_CH1_FPCB_USE_SOL].m_strIOName = _T("Y_PA_TR_CH1_FPCB_USE_SOL");
	m_Out[Y_PA_TR_CH1_FPCB_USE_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_TR_CH2_BLOW_ON_SOL].m_strIOName = _T("Y_PA_TR_CH2_BLOW_ON_SOL");
	m_Out[Y_PA_TR_CH2_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_TR_CH2_VAC_ON_SOL].m_strIOName = _T("Y_PA_TR_CH2_VAC_ON_SOL");
	m_Out[Y_PA_TR_CH2_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_TR_CH2_FPCB_USE_SOL].m_strIOName = _T("Y_PA_TR_CH2_FPCB_USE_SOL");
	m_Out[Y_PA_TR_CH2_FPCB_USE_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_TR_CH1_BLOW_ON_SOL].m_strIOName = _T("Y_LD_TR_CH1_BLOW_ON_SOL");
	m_Out[Y_LD_TR_CH1_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_TR_CH1_VAC_ON_SOL].m_strIOName = _T("Y_LD_TR_CH1_VAC_ON_SOL");
	m_Out[Y_LD_TR_CH1_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_TR_CH1_FPCB_BLOW_SOL].m_strIOName = _T("Y_LD_TR_CH1_FPCB_BLOW_SOL");
	m_Out[Y_LD_TR_CH1_FPCB_BLOW_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_TR_CH2_BLOW_ON_SOL].m_strIOName = _T("Y_LD_TR_CH2_BLOW_ON_SOL");
	m_Out[Y_LD_TR_CH2_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_TR_CH2_VAC_ON_SOL].m_strIOName = _T("Y_LD_TR_CH2_VAC_ON_SOL");
	m_Out[Y_LD_TR_CH2_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_TR_CH2_FPCB_BLOW_SOL].m_strIOName = _T("Y_LD_TR_CH2_FPCB_BLOW_SOL");
	m_Out[Y_LD_TR_CH2_FPCB_BLOW_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UPPER_SHUTTLE_CH1_BLOW_ON_SOL].m_strIOName = _T("Y_UPPER_SHUTTLE_CH1_BLOW_ON_SOL");
	m_Out[Y_UPPER_SHUTTLE_CH1_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;

	//Y030 ~ Y03F
	m_Out[Y_UPPER_SHUTTLE_CH1_VAC_ON_SOL].m_strIOName = _T("Y_UPPER_SHUTTLE_CH1_VAC_ON_SOL");
	m_Out[Y_UPPER_SHUTTLE_CH1_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UPPER_SHUTTLE_CH2_BLOW_ON_SOL].m_strIOName = _T("Y_UPPER_SHUTTLE_CH2_BLOW_ON_SOL");
	m_Out[Y_UPPER_SHUTTLE_CH2_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UPPER_SHUTTLE_CH2_VAC_ON_SOL].m_strIOName = _T("Y_UPPER_SHUTTLE_CH2_VAC_ON_SOL");
	m_Out[Y_UPPER_SHUTTLE_CH2_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LOWER_SHUTTLE_CH1_BLOW_ON_SOL].m_strIOName = _T("Y_LOWER_SHUTTLE_CH1_BLOW_ON_SOL");
	m_Out[Y_LOWER_SHUTTLE_CH1_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LOWER_SHUTTLE_CH1_VAC_ON_SOL].m_strIOName = _T("Y_LOWER_SHUTTLE_CH1_VAC_ON_SOL");
	m_Out[Y_LOWER_SHUTTLE_CH1_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LOWER_SHUTTLE_CH2_BLOW_ON_SOL].m_strIOName = _T("Y_LOWER_SHUTTLE_CH2_BLOW_ON_SOL");
	m_Out[Y_LOWER_SHUTTLE_CH2_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LOWER_SHUTTLE_CH2_VAC_ON_SOL].m_strIOName = _T("Y_LOWER_SHUTTLE_CH2_VAC_ON_SOL");
	m_Out[Y_LOWER_SHUTTLE_CH2_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_MCR_LOWER_CAM_TRIGGER].m_strIOName = _T("Y_MCR_LOWER_CAM_TRIGGER");
	m_Out[Y_MCR_LOWER_CAM_TRIGGER].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_MCR_UPPER_CAM_TRIGGER].m_strIOName = _T("Y_MCR_UPPER_CAM_TRIGGER");
	m_Out[Y_MCR_UPPER_CAM_TRIGGER].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_TR_CONTACT_BLOW_SOL].m_strIOName = _T("Y_LD_TR_CONTACT_BLOW_SOL");
	m_Out[Y_LD_TR_CONTACT_BLOW_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_STAGE_CH1_BLOW_ON_SOL].m_strIOName = _T("Y_PA_STAGE_CH1_BLOW_ON_SOL");
	m_Out[Y_PA_STAGE_CH1_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_STAGE_CH1_VAC_ON_SOL].m_strIOName = _T("Y_PA_STAGE_CH1_VAC_ON_SOL");
	m_Out[Y_PA_STAGE_CH1_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_STAGE_CH2_BLOW_ON_SOL].m_strIOName = _T("Y_PA_STAGE_CH2_BLOW_ON_SOL");
	m_Out[Y_PA_STAGE_CH2_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_STAGE_CH2_VAC_ON_SOL].m_strIOName = _T("Y_PA_STAGE_CH2_VAC_ON_SOL");
	m_Out[Y_PA_STAGE_CH2_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_03E].m_strIOName = _T("Y_03E");
	m_Out[Y_03E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_03F].m_strIOName = _T("Y_03F");
	m_Out[Y_03F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y040 ~ Y04F
	m_Out[Y_DCR_TRIGGER].m_strIOName = _T("Y_DCR_TRIGGER");
	m_Out[Y_DCR_TRIGGER].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_041].m_strIOName = _T("Y_041");
	m_Out[Y_041].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_042].m_strIOName = _T("Y_042");
	m_Out[Y_042].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_043].m_strIOName = _T("Y_043");
	m_Out[Y_043].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_044].m_strIOName = _T("Y_044");
	m_Out[Y_044].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_045].m_strIOName = _T("Y_045");
	m_Out[Y_045].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_046].m_strIOName = _T("Y_046");
	m_Out[Y_046].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_047].m_strIOName = _T("Y_047");
	m_Out[Y_047].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_048].m_strIOName = _T("Y_048");
	m_Out[Y_048].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_049].m_strIOName = _T("Y_049");
	m_Out[Y_049].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_04A].m_strIOName = _T("Y_04A");
	m_Out[Y_04A].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_04B].m_strIOName = _T("Y_04B");
	m_Out[Y_04B].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_04C].m_strIOName = _T("Y_04C");
	m_Out[Y_04C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_04D].m_strIOName = _T("Y_04D");
	m_Out[Y_04D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_04E].m_strIOName = _T("Y_04E");
	m_Out[Y_04E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_04F].m_strIOName = _T("Y_04F");
	m_Out[Y_04F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y050 ~ Y05F 
	m_Out[Y_HOTLINE_ALIVE].m_strIOName = _T("Y_HOTLINE_ALIVE");
	m_Out[Y_HOTLINE_ALIVE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_EMERGENCY].m_strIOName = _T("Y_HOTLINE_EMERGENCY");
	m_Out[Y_HOTLINE_EMERGENCY].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_NET_READY].m_strIOName = _T("Y_HOTLINE_NET_READY");
	m_Out[Y_HOTLINE_NET_READY].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_RESERVED].m_strIOName = _T("Y_HOTLINE_RESERVED");
	m_Out[Y_HOTLINE_RESERVED].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_INTERFACE_1].m_strIOName = _T("Y_HOTLINE_INTERFACE_1");
	m_Out[Y_HOTLINE_INTERFACE_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_INTERFACE_2].m_strIOName = _T("Y_HOTLINE_INTERFACE_2");
	m_Out[Y_HOTLINE_INTERFACE_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_INTERFACE_3].m_strIOName = _T("Y_HOTLINE_INTERFACE_3");
	m_Out[Y_HOTLINE_INTERFACE_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_SUB_EMO].m_strIOName = _T("Y_HOTLINE_SUB_EMO");
	m_Out[Y_HOTLINE_SUB_EMO].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_058].m_strIOName = _T("Y_058");
	m_Out[Y_058].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_059].m_strIOName = _T("Y_059");
	m_Out[Y_059].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_05A].m_strIOName = _T("Y_05A");
	m_Out[Y_05A].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_05B].m_strIOName = _T("Y_05B");
	m_Out[Y_05B].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_05C].m_strIOName = _T("Y_05C");
	m_Out[Y_05C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_05D].m_strIOName = _T("Y_05D");
	m_Out[Y_05D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_05E].m_strIOName = _T("Y_05E");
	m_Out[Y_05E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_05F].m_strIOName = _T("Y_05F");
	m_Out[Y_05F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y060 ~ Y06F
	m_Out[Y_AMT_AJIG_MAIN_VAC_SOL].m_strIOName = _T("Y_AMT_AJIG_MAIN_VAC_SOL");
	m_Out[Y_AMT_AJIG_MAIN_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_AJIG_CH1_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_AJIG_CH1_CELL_VAC_SOL");
	m_Out[Y_AMT_AJIG_CH1_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_AJIG_CH2_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_AJIG_CH2_CELL_VAC_SOL");
	m_Out[Y_AMT_AJIG_CH2_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_AJIG_CH1_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_AJIG_CH1_FPCB_VAC_SOL");
	m_Out[Y_AMT_AJIG_CH1_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_AJIG_CH2_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_AJIG_CH2_FPCB_VAC_SOL");
	m_Out[Y_AMT_AJIG_CH2_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_BJIG_MAIN_VAC_SOL].m_strIOName = _T("Y_AMT_BJIG_MAIN_VAC_SOL");
	m_Out[Y_AMT_BJIG_MAIN_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_BJIG_CH1_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_BJIG_CH1_CELL_VAC_SOL");
	m_Out[Y_AMT_BJIG_CH1_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_BJIG_CH2_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_BJIG_CH2_CELL_VAC_SOL");
	m_Out[Y_AMT_BJIG_CH2_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_BJIG_CH1_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_BJIG_CH1_FPCB_VAC_SOL");
	m_Out[Y_AMT_BJIG_CH1_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_BJIG_CH2_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_BJIG_CH2_FPCB_VAC_SOL");
	m_Out[Y_AMT_BJIG_CH2_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_SWITCH_1].m_strIOName = _T("Y_SWITCH_1");
	m_Out[Y_SWITCH_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_SWITCH_2].m_strIOName = _T("Y_SWITCH_2");
	m_Out[Y_SWITCH_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_06C].m_strIOName = _T("Y_06C");
	m_Out[Y_06C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_06D].m_strIOName = _T("Y_06D");
	m_Out[Y_06D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_06E].m_strIOName = _T("Y_06E");
	m_Out[Y_06E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_06F].m_strIOName = _T("Y_06F");
	m_Out[Y_06F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y070 ~ Y07F
	m_Out[Y_AMT_CJIG_MAIN_VAC_SOL].m_strIOName = _T("Y_AMT_CJIG_MAIN_VAC_SOL");
	m_Out[Y_AMT_CJIG_MAIN_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_CJIG_CH1_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_CJIG_CH1_CELL_VAC_SOL");
	m_Out[Y_AMT_CJIG_CH1_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_CJIG_CH2_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_CJIG_CH2_CELL_VAC_SOL");
	m_Out[Y_AMT_CJIG_CH2_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_CJIG_CH1_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_CJIG_CH1_FPCB_VAC_SOL");
	m_Out[Y_AMT_CJIG_CH1_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_CJIG_CH2_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_CJIG_CH2_FPCB_VAC_SOL");
	m_Out[Y_AMT_CJIG_CH2_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_DJIG_MAIN_VAC_SOL].m_strIOName = _T("Y_AMT_DJIG_MAIN_VAC_SOL");
	m_Out[Y_AMT_DJIG_MAIN_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_DJIG_CH1_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_DJIG_CH1_CELL_VAC_SOL");
	m_Out[Y_AMT_DJIG_CH1_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_DJIG_CH2_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_DJIG_CH2_CELL_VAC_SOL");
	m_Out[Y_AMT_DJIG_CH2_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_DJIG_CH1_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_DJIG_CH1_FPCB_VAC_SOL");
	m_Out[Y_AMT_DJIG_CH1_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_DJIG_CH2_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_DJIG_CH2_FPCB_VAC_SOL");
	m_Out[Y_AMT_DJIG_CH2_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_07A].m_strIOName = _T("Y_07A");
	m_Out[Y_07A].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_07B].m_strIOName = _T("Y_07B");
	m_Out[Y_07B].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_07C].m_strIOName = _T("Y_07C");
	m_Out[Y_07C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_07D].m_strIOName = _T("Y_07D");
	m_Out[Y_07D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_07E].m_strIOName = _T("Y_07E");
	m_Out[Y_07E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_07F].m_strIOName = _T("Y_07F");
	m_Out[Y_07F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y080 ~ Y08F
	m_Out[Y_ULD_TR_CH1_CELL_BLOW_ON_SOL].m_strIOName = _T("Y_ULD_TR_CH1_CELL_BLOW_ON_SOL");
	m_Out[Y_ULD_TR_CH1_CELL_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_TR_CH1_CELL_VAC_ON_SOL].m_strIOName = _T("Y_ULD_TR_CH1_CELL_VAC_ON_SOL");
	m_Out[Y_ULD_TR_CH1_CELL_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_TR_CH1_FPCB_USE_SOL].m_strIOName = _T("Y_ULD_TR_CH1_FPCB_USE_SOL");
	m_Out[Y_ULD_TR_CH1_FPCB_USE_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_TR_CH2_CELL_BLOW_ON_SOL].m_strIOName = _T("Y_ULD_TR_CH2_CELL_BLOW_ON_SOL");
	m_Out[Y_ULD_TR_CH2_CELL_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_TR_CH2_CELL_VAC_ON_SOL].m_strIOName = _T("Y_ULD_TR_CH2_CELL_VAC_ON_SOL");
	m_Out[Y_ULD_TR_CH2_CELL_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_TR_CH2_FPCB_USE_SOL].m_strIOName = _T("Y_ULD_TR_CH2_FPCB_USE_SOL");
	m_Out[Y_ULD_TR_CH2_FPCB_USE_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_STAGE_CH1_BLOW_ON_SOL].m_strIOName = _T("Y_ULD_STAGE_CH1_BLOW_ON_SOL");
	m_Out[Y_ULD_STAGE_CH1_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_STAGE_CH1_VAC_ON_SOL].m_strIOName = _T("Y_ULD_STAGE_CH1_VAC_ON_SOL");
	m_Out[Y_ULD_STAGE_CH1_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_STAGE_CH2_BLOW_ON_SOL].m_strIOName = _T("Y_ULD_STAGE_CH2_BLOW_ON_SOL");
	m_Out[Y_ULD_STAGE_CH2_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_STAGE_CH2_VAC_ON_SOL].m_strIOName = _T("Y_ULD_STAGE_CH2_VAC_ON_SOL");
	m_Out[Y_ULD_STAGE_CH2_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_ROBOT_CELL_BLOW_ON_SOL].m_strIOName = _T("Y_ULD_ROBOT_CELL_BLOW_ON_SOL");
	m_Out[Y_ULD_ROBOT_CELL_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_ROBOT_CELL_VAC_ON_SOL].m_strIOName = _T("Y_ULD_ROBOT_CELL_VAC_ON_SOL");
	m_Out[Y_ULD_ROBOT_CELL_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_ROBOT_FPCB_USE_SOL].m_strIOName = _T("Y_ULD_ROBOT_FPCB_USE_SOL");
	m_Out[Y_ULD_ROBOT_FPCB_USE_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1].m_strIOName = _T("Y_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1");
	m_Out[Y_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1].m_strIOName = _T("Y_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1");
	m_Out[Y_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2].m_strIOName = _T("Y_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2");
	m_Out[Y_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;

	//Y090 ~ Y09F
	m_Out[Y_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2].m_strIOName = _T("Y_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2");
	m_Out[Y_GOOD_ULD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1].m_strIOName = _T("Y_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1");
	m_Out[Y_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1].m_strIOName = _T("Y_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1");
	m_Out[Y_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2].m_strIOName = _T("Y_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2");
	m_Out[Y_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2].m_strIOName = _T("Y_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2");
	m_Out[Y_GOOD_ULD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL].m_strIOName = _T("Y_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL");
	m_Out[Y_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL].m_strIOName = _T("Y_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL");
	m_Out[Y_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SOL_1].m_strIOName = _T("Y_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SOL_1");
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SOL_1].m_strIOName = _T("Y_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SOL_1");
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SOL_2].m_strIOName = _T("Y_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SOL_2");
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SOL_2].m_strIOName = _T("Y_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SOL_2");
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_MUTE_ON].m_strIOName = _T("Y_GOOD_LD_TRAY_MUTE_ON");
	m_Out[Y_GOOD_LD_TRAY_MUTE_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_MUTE_ON].m_strIOName = _T("Y_GOOD_ULD_TRAY_MUTE_ON");
	m_Out[Y_GOOD_ULD_TRAY_MUTE_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_MUTE_ON].m_strIOName = _T("Y_NG_TRAY_MUTE_ON");
	m_Out[Y_NG_TRAY_MUTE_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GRIP_SW_ON].m_strIOName = _T("Y_GRIP_SW_ON");
	m_Out[Y_GRIP_SW_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_09F].m_strIOName = _T("Y_09F");
	m_Out[Y_09F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y0A0 ~ Y0AF
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1");
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1");
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2");
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2");
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1");
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1");
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2");
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2");
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL].m_strIOName = _T("Y_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL");
	m_Out[Y_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL].m_strIOName = _T("Y_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL");
	m_Out[Y_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_UP_SOL_1].m_strIOName = _T("Y_GOOD_LD_TRAY_LOWER_STOPPER_UP_SOL_1");
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_UP_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SOL_1].m_strIOName = _T("Y_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SOL_1");
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_UP_SOL_2].m_strIOName = _T("Y_GOOD_LD_TRAY_LOWER_STOPPER_UP_SOL_2");
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_UP_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SOL_2].m_strIOName = _T("Y_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SOL_2");
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1].m_strIOName = _T("Y_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1");
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1].m_strIOName = _T("Y_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1");
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;

	//Y0B0 ~ Y0BF
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2].m_strIOName = _T("Y_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2");
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2].m_strIOName = _T("Y_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2");
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1].m_strIOName = _T("Y_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1");
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1].m_strIOName = _T("Y_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1");
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2].m_strIOName = _T("Y_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2");
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2].m_strIOName = _T("Y_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2");
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL_1].m_strIOName = _T("Y_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL_1");
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL_1].m_strIOName = _T("Y_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL_1");
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL_2].m_strIOName = _T("Y_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL_2");
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL_2].m_strIOName = _T("Y_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL_2");
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_STOPPER_UP_SOL_1].m_strIOName = _T("Y_NG_TRAY_LOWER_STOPPER_UP_SOL_1");
	m_Out[Y_NG_TRAY_LOWER_STOPPER_UP_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_STOPPER_DOWN_SOL_1].m_strIOName = _T("Y_NG_TRAY_LOWER_STOPPER_DOWN_SOL_1");
	m_Out[Y_NG_TRAY_LOWER_STOPPER_DOWN_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_STOPPER_UP_SOL_2].m_strIOName = _T("Y_NG_TRAY_LOWER_STOPPER_UP_SOL_2");
	m_Out[Y_NG_TRAY_LOWER_STOPPER_UP_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_STOPPER_DOWN_SOL_2].m_strIOName = _T("Y_NG_TRAY_LOWER_STOPPER_DOWN_SOL_2");
	m_Out[Y_NG_TRAY_LOWER_STOPPER_DOWN_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0BE].m_strIOName = _T("Y_0BE");
	m_Out[Y_0BE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0BF].m_strIOName = _T("Y_0BF");
	m_Out[Y_0BF].m_Check = CIOParam::CHECK_TYPE_A;

	//Y0C0 ~ Y0CF
	m_Out[Y_NG_TRAY_ALIGN_ARM_IN_SOL].m_strIOName = _T("Y_NG_TRAY_ALIGN_ARM_IN_SOL");
	m_Out[Y_NG_TRAY_ALIGN_ARM_IN_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_ALIGN_ARM_OUT_SOL].m_strIOName = _T("Y_NG_TRAY_ALIGN_ARM_OUT_SOL");
	m_Out[Y_NG_TRAY_ALIGN_ARM_OUT_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_TRAY_ALIGN_ARM_IN_SOL].m_strIOName = _T("Y_NG_BUFFER_TRAY_ALIGN_ARM_IN_SOL");
	m_Out[Y_NG_BUFFER_TRAY_ALIGN_ARM_IN_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_TRAY_ALIGN_ARM_OUT_SOL].m_strIOName = _T("Y_NG_BUFFER_TRAY_ALIGN_ARM_OUT_SOL");
	m_Out[Y_NG_BUFFER_TRAY_ALIGN_ARM_OUT_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_TRAY_UP_SOL].m_strIOName = _T("Y_NG_TRAY_TRAY_UP_SOL");
	m_Out[Y_NG_TRAY_TRAY_UP_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_TRAY_DOWN_SOL].m_strIOName = _T("Y_NG_TRAY_TRAY_DOWN_SOL");
	m_Out[Y_NG_TRAY_TRAY_DOWN_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_TRAY_TRAY_UP_SOL].m_strIOName = _T("Y_NG_BUFFER_TRAY_TRAY_UP_SOL");
	m_Out[Y_NG_BUFFER_TRAY_TRAY_UP_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_TRAY_TRAY_DOWN_SOL].m_strIOName = _T("Y_NG_BUFFER_TRAY_TRAY_DOWN_SOL");
	m_Out[Y_NG_BUFFER_TRAY_TRAY_DOWN_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0C8].m_strIOName = _T("Y_0C8");
	m_Out[Y_0C8].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0C9].m_strIOName = _T("Y_0C9");
	m_Out[Y_0C9].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0CA].m_strIOName = _T("Y_0CA");
	m_Out[Y_0CA].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0CB].m_strIOName = _T("Y_0CB");
	m_Out[Y_0CB].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0CC].m_strIOName = _T("Y_0CC");
	m_Out[Y_0CC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0CD].m_strIOName = _T("Y_0CD");
	m_Out[Y_0CD].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0CE].m_strIOName = _T("Y_0CE");
	m_Out[Y_0CE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0CF].m_strIOName = _T("Y_0CF");
	m_Out[Y_0CF].m_Check = CIOParam::CHECK_TYPE_A;

	//Y0D0 ~ Y0DF
	m_Out[Y_GOOD_TRAY_TR_BLOW_ON_SOL_1].m_strIOName = _T("Y_GOOD_TRAY_TR_BLOW_ON_SOL_1");
	m_Out[Y_GOOD_TRAY_TR_BLOW_ON_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_TRAY_TR_VAC_ON_SOL_1].m_strIOName = _T("Y_GOOD_TRAY_TR_VAC_ON_SOL_1");
	m_Out[Y_GOOD_TRAY_TR_VAC_ON_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_TRAY_TR_BLOW_ON_SOL_2].m_strIOName = _T("Y_GOOD_TRAY_TR_BLOW_ON_SOL_2");
	m_Out[Y_GOOD_TRAY_TR_BLOW_ON_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_TRAY_TR_VAC_ON_SOL_2].m_strIOName = _T("Y_GOOD_TRAY_TR_VAC_ON_SOL_2");
	m_Out[Y_GOOD_TRAY_TR_VAC_ON_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_TR_BLOW_ON_SOL_1].m_strIOName = _T("Y_NG_TRAY_TR_BLOW_ON_SOL_1");
	m_Out[Y_NG_TRAY_TR_BLOW_ON_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_TR_VAC_ON_SOL_1].m_strIOName = _T("Y_NG_TRAY_TR_VAC_ON_SOL_1");
	m_Out[Y_NG_TRAY_TR_VAC_ON_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_TR_BLOW_ON_SOL_2].m_strIOName = _T("Y_NG_TRAY_TR_BLOW_ON_SOL_2");
	m_Out[Y_NG_TRAY_TR_BLOW_ON_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_TR_VAC_ON_SOL_2].m_strIOName = _T("Y_NG_TRAY_TR_VAC_ON_SOL_2");
	m_Out[Y_NG_TRAY_TR_VAC_ON_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UD_DOOR_UNLOCK_1].m_strIOName = _T("Y_UD_DOOR_UNLOCK_1");
	m_Out[Y_UD_DOOR_UNLOCK_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UD_DOOR_UNLOCK_2].m_strIOName = _T("Y_UD_DOOR_UNLOCK_2");
	m_Out[Y_UD_DOOR_UNLOCK_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UD_DOOR_UNLOCK_3].m_strIOName = _T("Y_UD_DOOR_UNLOCK_3");
	m_Out[Y_UD_DOOR_UNLOCK_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UD_DOOR_UNLOCK_4].m_strIOName = _T("Y_UD_DOOR_UNLOCK_4");
	m_Out[Y_UD_DOOR_UNLOCK_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UD_DOOR_UNLOCK_5].m_strIOName = _T("Y_UD_DOOR_UNLOCK_5");
	m_Out[Y_UD_DOOR_UNLOCK_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UD_DOOR_UNLOCK_6].m_strIOName = _T("Y_UD_DOOR_UNLOCK_6");
	m_Out[Y_UD_DOOR_UNLOCK_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0DE].m_strIOName = _T("Y_0DE");
	m_Out[Y_0DE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0DF].m_strIOName = _T("Y_0DF");
	m_Out[Y_0DF].m_Check = CIOParam::CHECK_TYPE_A;

	//Y0E0 ~ Y0EF
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_CW_RUN].m_strIOName = _T("Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_CW_RUN");
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_CW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_CCW_RUN].m_strIOName = _T("Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_CCW_RUN");
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_CCW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_RESET].m_strIOName = _T("Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_RESET");
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_RESET].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_ACC].m_strIOName = _T("Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_ACC");
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_ACC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_DEC].m_strIOName = _T("Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_DEC");
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_DEC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_CW_RUN].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_INVERTER_CW_RUN");
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_CW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_CCW_RUN].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_INVERTER_CCW_RUN");
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_CCW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_RESET].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_INVERTER_RESET");
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_RESET].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_ACC].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_INVERTER_ACC");
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_ACC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_DEC].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_INVERTER_DEC");
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_DEC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_CW_RUN].m_strIOName = _T("Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_CW_RUN");
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_CW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_CCW_RUN].m_strIOName = _T("Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_CCW_RUN");
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_CCW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_RESET].m_strIOName = _T("Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_RESET");
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_RESET].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_ACC].m_strIOName = _T("Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_ACC");
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_ACC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_DEC].m_strIOName = _T("Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_DEC");
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_DEC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_CW_RUN].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_INVERTER_CW_RUN");
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_CW_RUN].m_Check = CIOParam::CHECK_TYPE_A;

	//Y0F0 ~ Y0FF
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_CCW_RUN].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_INVERTER_CCW_RUN");
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_CCW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_RESET].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_INVERTER_RESET");
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_RESET].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_ACC].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_INVERTER_ACC");
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_ACC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_DEC].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_INVERTER_DEC");
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_DEC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_CW_RUN].m_strIOName = _T("Y_NG_BUFFER_CONV_TRAY_INVERTER_CW_RUN");
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_CW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_CCW_RUN].m_strIOName = _T("Y_NG_BUFFER_CONV_TRAY_INVERTER_CCW_RUN");
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_CCW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_RESET].m_strIOName = _T("Y_NG_BUFFER_CONV_TRAY_INVERTER_RESET");
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_RESET].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_ACC].m_strIOName = _T("Y_NG_BUFFER_CONV_TRAY_INVERTER_ACC");
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_ACC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_DEC].m_strIOName = _T("Y_NG_BUFFER_CONV_TRAY_INVERTER_DEC");
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_DEC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_INVERTER_CW_RUN].m_strIOName = _T("Y_NG_CONV_TRAY_INVERTER_CW_RUN");
	m_Out[Y_NG_CONV_TRAY_INVERTER_CW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_INVERTER_CCW_RUN].m_strIOName = _T("Y_NG_CONV_TRAY_INVERTER_CCW_RUN");
	m_Out[Y_NG_CONV_TRAY_INVERTER_CCW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_INVERTER_RESET].m_strIOName = _T("Y_NG_CONV_TRAY_INVERTER_RESET");
	m_Out[Y_NG_CONV_TRAY_INVERTER_RESET].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_INVERTER_ACC].m_strIOName = _T("Y_NG_CONV_TRAY_INVERTER_ACC");
	m_Out[Y_NG_CONV_TRAY_INVERTER_ACC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_INVERTER_DEC].m_strIOName = _T("Y_NG_CONV_TRAY_INVERTER_DEC");
	m_Out[Y_NG_CONV_TRAY_INVERTER_DEC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_DCR_TRIGGER].m_strIOName = _T("Y_DCR_TRIGGER");
	m_Out[Y_DCR_TRIGGER].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0FF].m_strIOName = _T("Y_0FF");
	m_Out[Y_0FF].m_Check = CIOParam::CHECK_TYPE_A;

	//Y100 ~ Y10F
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_MODE].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_MODE");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_MODE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_SELECT].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_SELECT");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_SELECT].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_REQ].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_REQ");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_REQ].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_CONNECTION].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_CONNECTION");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_CONNECTION].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_START].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_START");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_START].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_COMP].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_COMP");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_COMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_5].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_IN_5");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_6].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_IN_6");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_7].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_IN_7");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_7].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_8].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_IN_8");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_8].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_MODE].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_MODE");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_MODE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_SELECT].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_SELECT");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_SELECT].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_REQ].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_REQ");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_REQ].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_CONNECTION].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_CONNECTION");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_CONNECTION].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_START].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_START");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_START].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_COMP].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_COMP");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_COMP].m_Check = CIOParam::CHECK_TYPE_A;

	//Y110 ~ Y11F
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_5].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_IN_5");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_6].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_IN_6");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_7].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_IN_7");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_7].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_8].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_IN_8");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_8].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_MODE].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_MODE");
	m_Out[Y_NG_CONV_TRAY_PIO_MODE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_SELECT].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_SELECT");
	m_Out[Y_NG_CONV_TRAY_PIO_SELECT].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_REQ].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_REQ");
	m_Out[Y_NG_CONV_TRAY_PIO_REQ].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_CONNECTION].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_CONNECTION");
	m_Out[Y_NG_CONV_TRAY_PIO_CONNECTION].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_START].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_START");
	m_Out[Y_NG_CONV_TRAY_PIO_START].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_COMP].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_COMP");
	m_Out[Y_NG_CONV_TRAY_PIO_COMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_IN_5].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_IN_5");
	m_Out[Y_NG_CONV_TRAY_PIO_IN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_IN_6].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_IN_6");
	m_Out[Y_NG_CONV_TRAY_PIO_IN_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_IN_7].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_IN_7");
	m_Out[Y_NG_CONV_TRAY_PIO_IN_7].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_IN_8].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_IN_8");
	m_Out[Y_NG_CONV_TRAY_PIO_IN_8].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_11E].m_strIOName = _T("Y_11E");
	m_Out[Y_11E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_11F].m_strIOName = _T("Y_11F");
	m_Out[Y_11F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y120 ~ Y12F
	m_Out[Y_120].m_strIOName = _T("Y_120");
	m_Out[Y_120].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_121].m_strIOName = _T("Y_121");
	m_Out[Y_121].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_122].m_strIOName = _T("Y_122");
	m_Out[Y_122].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_123].m_strIOName = _T("Y_123");
	m_Out[Y_123].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_124].m_strIOName = _T("Y_124");
	m_Out[Y_124].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_125].m_strIOName = _T("Y_125");
	m_Out[Y_125].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_126].m_strIOName = _T("Y_126");
	m_Out[Y_126].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_127].m_strIOName = _T("Y_127");
	m_Out[Y_127].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_128].m_strIOName = _T("Y_128");
	m_Out[Y_128].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_129].m_strIOName = _T("Y_129");
	m_Out[Y_129].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_12A].m_strIOName = _T("Y_12A");
	m_Out[Y_12A].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_12B].m_strIOName = _T("Y_12B");
	m_Out[Y_12B].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_12C].m_strIOName = _T("Y_12C");
	m_Out[Y_12C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_12D].m_strIOName = _T("Y_12D");
	m_Out[Y_12D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_12E].m_strIOName = _T("Y_12E");
	m_Out[Y_12E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_12F].m_strIOName = _T("Y_12F");
	m_Out[Y_12F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y130 ~ Y13F
	m_Out[Y_GOOD_LD_TRAY_REQ_SW].m_strIOName = _T("Y_GOOD_LD_TRAY_REQ_SW");
	m_Out[Y_GOOD_LD_TRAY_REQ_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_COMP_SW].m_strIOName = _T("Y_GOOD_LD_TRAY_COMP_SW");
	m_Out[Y_GOOD_LD_TRAY_COMP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_MUTING_LAMP_ON].m_strIOName = _T("Y_GOOD_LD_TRAY_MUTING_LAMP_ON");
	m_Out[Y_GOOD_LD_TRAY_MUTING_LAMP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_REQ_SW].m_strIOName = _T("Y_GOOD_ULD_TRAY_REQ_SW");
	m_Out[Y_GOOD_ULD_TRAY_REQ_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_COMP_SW].m_strIOName = _T("Y_GOOD_ULD_TRAY_COMP_SW");
	m_Out[Y_GOOD_ULD_TRAY_COMP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_MUTING_LAMP_ON].m_strIOName = _T("Y_GOOD_ULD_TRAY_MUTING_LAMP_ON");
	m_Out[Y_GOOD_ULD_TRAY_MUTING_LAMP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_IN_REQ_SW].m_strIOName = _T("Y_NG_TRAY_IN_REQ_SW");
	m_Out[Y_NG_TRAY_IN_REQ_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_IN_COMP_SW].m_strIOName = _T("Y_NG_TRAY_IN_COMP_SW");
	m_Out[Y_NG_TRAY_IN_COMP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_MUTING_LAMP_ON].m_strIOName = _T("Y_NG_TRAY_MUTING_LAMP_ON");
	m_Out[Y_NG_TRAY_MUTING_LAMP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_OUT_REQ_SW].m_strIOName = _T("Y_NG_TRAY_OUT_REQ_SW");
	m_Out[Y_NG_TRAY_OUT_REQ_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_OUT_COMP_SW].m_strIOName = _T("Y_NG_TRAY_OUT_COMP_SW");
	m_Out[Y_NG_TRAY_OUT_COMP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_13B].m_strIOName = _T("Y_13B");
	m_Out[Y_13B].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_13C].m_strIOName = _T("Y_13C");
	m_Out[Y_13C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_13D].m_strIOName = _T("Y_13D");
	m_Out[Y_13D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_13E].m_strIOName = _T("Y_13E");
	m_Out[Y_13E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_13F].m_strIOName = _T("Y_13F");
	m_Out[Y_13F].m_Check = CIOParam::CHECK_TYPE_A;
#else
	//Y000 ~ Y00F
	m_Out[Y_POWER_ON_LAMP].m_strIOName = _T("Y_POWER_ON_LAMP");
	m_Out[Y_POWER_ON_LAMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_POWER_OFF_LAMP].m_strIOName = _T("Y_POWER_OFF_LAMP");
	m_Out[Y_POWER_OFF_LAMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_START_SW_LAMP].m_strIOName = _T("Y_START_SW_LAMP");
	m_Out[Y_START_SW_LAMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_STOP_SW_LAMP].m_strIOName = _T("Y_STOP_SW_LAMP");
	m_Out[Y_STOP_SW_LAMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_RESET_SW_LAMP].m_strIOName = _T("Y_RESET_SW_LAMP");
	m_Out[Y_RESET_SW_LAMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_TOWER_LAMP_RED].m_strIOName = _T("Y_TOWER_LAMP_RED");
	m_Out[Y_TOWER_LAMP_RED].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_TOWER_LAMP_YELLOW].m_strIOName = _T("Y_TOWER_LAMP_YELLOW");
	m_Out[Y_TOWER_LAMP_YELLOW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_TOWER_LAMP_GREEN].m_strIOName = _T("Y_TOWER_LAMP_GREEN");
	m_Out[Y_TOWER_LAMP_GREEN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_008].m_strIOName = _T("Y_008");
	m_Out[Y_008].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_BUZZER_K1].m_strIOName = _T("Y_BUZZER_K1");
	m_Out[Y_BUZZER_K1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_BUZZER_K2].m_strIOName = _T("Y_BUZZER_K2");
	m_Out[Y_BUZZER_K2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_BUZZER_K3].m_strIOName = _T("Y_BUZZER_K3");
	m_Out[Y_BUZZER_K3].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_BUZZER_K4].m_strIOName = _T("Y_BUZZER_K4");
	m_Out[Y_BUZZER_K4].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LIGHT_ON].m_strIOName = _T("Y_LIGHT_ON");
	m_Out[Y_LIGHT_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_00E].m_strIOName = _T("Y_00E");
	m_Out[Y_00E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_00F].m_strIOName = _T("Y_00F");
	m_Out[Y_00F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y010 ~ Y01F
	m_Out[Y_LD_DOOR_UNLOCK_1].m_strIOName = _T("Y_LD_DOOR_UNLOCK_1");
	m_Out[Y_LD_DOOR_UNLOCK_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_DOOR_UNLOCK_2].m_strIOName = _T("Y_LD_DOOR_UNLOCK_2");
	m_Out[Y_LD_DOOR_UNLOCK_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_DOOR_UNLOCK_3].m_strIOName = _T("Y_LD_DOOR_UNLOCK_3");
	m_Out[Y_LD_DOOR_UNLOCK_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_DOOR_UNLOCK_4].m_strIOName = _T("Y_LD_DOOR_UNLOCK_4");
	m_Out[Y_LD_DOOR_UNLOCK_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_DOOR_UNLOCK_5].m_strIOName = _T("Y_LD_DOOR_UNLOCK_5");
	m_Out[Y_LD_DOOR_UNLOCK_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_DOOR_UNLOCK_6].m_strIOName = _T("Y_LD_DOOR_UNLOCK_6");
	m_Out[Y_LD_DOOR_UNLOCK_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_016].m_strIOName = _T("Y_016");
	m_Out[Y_016].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_017].m_strIOName = _T("Y_017");
	m_Out[Y_017].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_018].m_strIOName = _T("Y_018");
	m_Out[Y_018].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_019].m_strIOName = _T("Y_019");
	m_Out[Y_019].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_01A].m_strIOName = _T("Y_01A");
	m_Out[Y_01A].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_01B].m_strIOName = _T("Y_01B");
	m_Out[Y_01B].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_01C].m_strIOName = _T("Y_01C");
	m_Out[Y_01C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_01D].m_strIOName = _T("Y_01D");
	m_Out[Y_01D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_01E].m_strIOName = _T("Y_01E");
	m_Out[Y_01E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_01F].m_strIOName = _T("Y_01F");
	m_Out[Y_01F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y020 ~ Y02F
	m_Out[Y_LD_ROBOT_BLOW_ON_SOL].m_strIOName = _T("Y_LD_ROBOT_BLOW_ON_SOL");
	m_Out[Y_LD_ROBOT_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_ROBOT_VAC_ON_SOL].m_strIOName = _T("Y_LD_ROBOT_VAC_ON_SOL");
	m_Out[Y_LD_ROBOT_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_022].m_strIOName = _T("Y_022");
	m_Out[Y_022].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_TR_CH1_BLOW_ON_SOL].m_strIOName = _T("Y_PA_TR_CH1_BLOW_ON_SOL");
	m_Out[Y_PA_TR_CH1_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_TR_CH1_VAC_ON_SOL].m_strIOName = _T("Y_PA_TR_CH1_VAC_ON_SOL");
	m_Out[Y_PA_TR_CH1_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_025].m_strIOName = _T("Y_025");
	m_Out[Y_025].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_TR_CH2_BLOW_ON_SOL].m_strIOName = _T("Y_PA_TR_CH2_BLOW_ON_SOL");
	m_Out[Y_PA_TR_CH2_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_TR_CH2_VAC_ON_SOL].m_strIOName = _T("Y_PA_TR_CH2_VAC_ON_SOL");
	m_Out[Y_PA_TR_CH2_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_028].m_strIOName = _T("Y_028");
	m_Out[Y_028].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_TR_CH1_BLOW_ON_SOL].m_strIOName = _T("Y_LD_TR_CH1_BLOW_ON_SOL");
	m_Out[Y_LD_TR_CH1_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_TR_CH1_VAC_ON_SOL].m_strIOName = _T("Y_LD_TR_CH1_VAC_ON_SOL");
	m_Out[Y_LD_TR_CH1_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_TR_CH1_FPCB_BLOW_SOL].m_strIOName = _T("Y_LD_TR_CH1_FPCB_BLOW_SOL");
	m_Out[Y_LD_TR_CH1_FPCB_BLOW_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_TR_CH2_BLOW_ON_SOL].m_strIOName = _T("Y_LD_TR_CH2_BLOW_ON_SOL");
	m_Out[Y_LD_TR_CH2_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_TR_CH2_VAC_ON_SOL].m_strIOName = _T("Y_LD_TR_CH2_VAC_ON_SOL");
	m_Out[Y_LD_TR_CH2_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LD_TR_CH2_FPCB_BLOW_SOL].m_strIOName = _T("Y_LD_TR_CH2_FPCB_BLOW_SOL");
	m_Out[Y_LD_TR_CH2_FPCB_BLOW_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UPPER_SHUTTLE_CH1_BLOW_ON_SOL].m_strIOName = _T("Y_UPPER_SHUTTLE_CH1_BLOW_ON_SOL");
	m_Out[Y_UPPER_SHUTTLE_CH1_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;

	//Y030 ~ Y03F
	m_Out[Y_UPPER_SHUTTLE_CH1_VAC_ON_SOL].m_strIOName = _T("Y_UPPER_SHUTTLE_CH1_VAC_ON_SOL");
	m_Out[Y_UPPER_SHUTTLE_CH1_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UPPER_SHUTTLE_CH2_BLOW_ON_SOL].m_strIOName = _T("Y_UPPER_SHUTTLE_CH2_BLOW_ON_SOL");
	m_Out[Y_UPPER_SHUTTLE_CH2_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UPPER_SHUTTLE_CH2_VAC_ON_SOL].m_strIOName = _T("Y_UPPER_SHUTTLE_CH2_VAC_ON_SOL");
	m_Out[Y_UPPER_SHUTTLE_CH2_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LOWER_SHUTTLE_CH1_BLOW_ON_SOL].m_strIOName = _T("Y_LOWER_SHUTTLE_CH1_BLOW_ON_SOL");
	m_Out[Y_LOWER_SHUTTLE_CH1_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LOWER_SHUTTLE_CH1_VAC_ON_SOL].m_strIOName = _T("Y_LOWER_SHUTTLE_CH1_VAC_ON_SOL");
	m_Out[Y_LOWER_SHUTTLE_CH1_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LOWER_SHUTTLE_CH2_BLOW_ON_SOL].m_strIOName = _T("Y_LOWER_SHUTTLE_CH2_BLOW_ON_SOL");
	m_Out[Y_LOWER_SHUTTLE_CH2_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_LOWER_SHUTTLE_CH2_VAC_ON_SOL].m_strIOName = _T("Y_LOWER_SHUTTLE_CH2_VAC_ON_SOL");
	m_Out[Y_LOWER_SHUTTLE_CH2_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_MCR_LOWER_CAM_TRIGGER].m_strIOName = _T("Y_MCR_LOWER_CAM_TRIGGER");
	m_Out[Y_MCR_LOWER_CAM_TRIGGER].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_MCR_UPPER_CAM_TRIGGER].m_strIOName = _T("Y_MCR_UPPER_CAM_TRIGGER");
	m_Out[Y_MCR_UPPER_CAM_TRIGGER].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_039].m_strIOName = _T("Y_039");
	m_Out[Y_039].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_STAGE_CH1_BLOW_ON_SOL].m_strIOName = _T("Y_PA_STAGE_CH1_BLOW_ON_SOL");
	m_Out[Y_PA_STAGE_CH1_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_STAGE_CH1_VAC_ON_SOL].m_strIOName = _T("Y_PA_STAGE_CH1_VAC_ON_SOL");
	m_Out[Y_PA_STAGE_CH1_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_STAGE_CH2_BLOW_ON_SOL].m_strIOName = _T("Y_PA_STAGE_CH2_BLOW_ON_SOL");
	m_Out[Y_PA_STAGE_CH2_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_PA_STAGE_CH2_VAC_ON_SOL].m_strIOName = _T("Y_PA_STAGE_CH2_VAC_ON_SOL");
	m_Out[Y_PA_STAGE_CH2_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_03E].m_strIOName = _T("Y_03E");
	m_Out[Y_03E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_03F].m_strIOName = _T("Y_03F");
	m_Out[Y_03F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y040 ~ Y04F
	m_Out[Y_DCR_TRIGGER].m_strIOName = _T("Y_DCR_TRIGGER");
	m_Out[Y_DCR_TRIGGER].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_041].m_strIOName = _T("Y_041");
	m_Out[Y_041].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_042].m_strIOName = _T("Y_042");
	m_Out[Y_042].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_043].m_strIOName = _T("Y_043");
	m_Out[Y_043].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_044].m_strIOName = _T("Y_044");
	m_Out[Y_044].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_045].m_strIOName = _T("Y_045");
	m_Out[Y_045].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_046].m_strIOName = _T("Y_046");
	m_Out[Y_046].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_047].m_strIOName = _T("Y_047");
	m_Out[Y_047].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_048].m_strIOName = _T("Y_048");
	m_Out[Y_048].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_049].m_strIOName = _T("Y_049");
	m_Out[Y_049].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_04A].m_strIOName = _T("Y_04A");
	m_Out[Y_04A].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_04B].m_strIOName = _T("Y_04B");
	m_Out[Y_04B].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_04C].m_strIOName = _T("Y_04C");
	m_Out[Y_04C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_04D].m_strIOName = _T("Y_04D");
	m_Out[Y_04D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_04E].m_strIOName = _T("Y_04E");
	m_Out[Y_04E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_04F].m_strIOName = _T("Y_04F");
	m_Out[Y_04F].m_Check = CIOParam::CHECK_TYPE_A;

//Y050 ~ Y05F 16점짜리 접점 방식 모듈로 바꺼야 한다고 해서 맨뒤로 옴긴다.
// 	m_Out[Y_HOTLINE_ALIVE].m_strIOName = _T("Y_HOTLINE_ALIVE");
// 	m_Out[Y_HOTLINE_ALIVE].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_HOTLINE_EMERGENCY].m_strIOName = _T("Y_HOTLINE_EMERGENCY");
// 	m_Out[Y_HOTLINE_EMERGENCY].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_HOTLINE_NET_READY].m_strIOName = _T("Y_HOTLINE_NET_READY");
// 	m_Out[Y_HOTLINE_NET_READY].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_HOTLINE_RESERVED].m_strIOName = _T("Y_HOTLINE_RESERVED");
// 	m_Out[Y_HOTLINE_RESERVED].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_HOTLINE_INTERFACE_1].m_strIOName = _T("Y_HOTLINE_INTERFACE_1");
// 	m_Out[Y_HOTLINE_INTERFACE_1].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_HOTLINE_INTERFACE_2].m_strIOName = _T("Y_HOTLINE_INTERFACE_2");
// 	m_Out[Y_HOTLINE_INTERFACE_2].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_HOTLINE_INTERFACE_3].m_strIOName = _T("Y_HOTLINE_INTERFACE_3");
// 	m_Out[Y_HOTLINE_INTERFACE_3].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_HOTLINE_SUB_EMO].m_strIOName = _T("Y_HOTLINE_SUB_EMO");
// 	m_Out[Y_HOTLINE_SUB_EMO].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_058].m_strIOName = _T("Y_058");
// 	m_Out[Y_058].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_059].m_strIOName = _T("Y_059");
// 	m_Out[Y_059].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_05A].m_strIOName = _T("Y_05A");
// 	m_Out[Y_05A].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_05B].m_strIOName = _T("Y_05B");
// 	m_Out[Y_05B].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_05C].m_strIOName = _T("Y_05C");
// 	m_Out[Y_05C].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_05D].m_strIOName = _T("Y_05D");
// 	m_Out[Y_05D].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_05E].m_strIOName = _T("Y_05E");
// 	m_Out[Y_05E].m_Check = CIOParam::CHECK_TYPE_A;
// 	m_Out[Y_05F].m_strIOName = _T("Y_05F");
// 	m_Out[Y_05F].m_Check = CIOParam::CHECK_TYPE_A;

	m_Out[Y_050].m_strIOName = _T("Y_050");
	m_Out[Y_050].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_051].m_strIOName = _T("Y_051");
	m_Out[Y_051].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_052].m_strIOName = _T("Y_052");
	m_Out[Y_052].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_053].m_strIOName = _T("Y_053");
	m_Out[Y_053].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_054].m_strIOName = _T("Y_054");
	m_Out[Y_054].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_055].m_strIOName = _T("Y_055");
	m_Out[Y_055].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_056].m_strIOName = _T("Y_056");
	m_Out[Y_056].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_057].m_strIOName = _T("Y_057");
	m_Out[Y_057].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_058].m_strIOName = _T("Y_058");
	m_Out[Y_058].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_059].m_strIOName = _T("Y_059");
	m_Out[Y_059].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_05A].m_strIOName = _T("Y_05A");
	m_Out[Y_05A].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_05B].m_strIOName = _T("Y_05B");
	m_Out[Y_05B].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_05C].m_strIOName = _T("Y_05C");
	m_Out[Y_05C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_05D].m_strIOName = _T("Y_05D");
	m_Out[Y_05D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_05E].m_strIOName = _T("Y_05E");
	m_Out[Y_05E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_05F].m_strIOName = _T("Y_05F");
	m_Out[Y_05F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y060 ~ Y06F
	m_Out[Y_AMT_AJIG_MAIN_VAC_SOL].m_strIOName = _T("Y_AMT_AJIG_MAIN_VAC_SOL");
	m_Out[Y_AMT_AJIG_MAIN_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_AJIG_CH1_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_AJIG_CH1_CELL_VAC_SOL");
	m_Out[Y_AMT_AJIG_CH1_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_AJIG_CH2_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_AJIG_CH2_CELL_VAC_SOL");
	m_Out[Y_AMT_AJIG_CH2_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_AJIG_CH1_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_AJIG_CH1_FPCB_VAC_SOL");
	m_Out[Y_AMT_AJIG_CH1_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_AJIG_CH2_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_AJIG_CH2_FPCB_VAC_SOL");
	m_Out[Y_AMT_AJIG_CH2_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_BJIG_MAIN_VAC_SOL].m_strIOName = _T("Y_AMT_BJIG_MAIN_VAC_SOL");
	m_Out[Y_AMT_BJIG_MAIN_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_BJIG_CH1_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_BJIG_CH1_CELL_VAC_SOL");
	m_Out[Y_AMT_BJIG_CH1_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_BJIG_CH2_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_BJIG_CH2_CELL_VAC_SOL");
	m_Out[Y_AMT_BJIG_CH2_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_BJIG_CH1_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_BJIG_CH1_FPCB_VAC_SOL");
	m_Out[Y_AMT_BJIG_CH1_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_BJIG_CH2_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_BJIG_CH2_FPCB_VAC_SOL");
	m_Out[Y_AMT_BJIG_CH2_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_SWITCH_1].m_strIOName = _T("Y_SWITCH_1");
	m_Out[Y_SWITCH_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_SWITCH_2].m_strIOName = _T("Y_SWITCH_2");
	m_Out[Y_SWITCH_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_06C].m_strIOName = _T("Y_06C");
	m_Out[Y_06C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_06D].m_strIOName = _T("Y_06D");
	m_Out[Y_06D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_06E].m_strIOName = _T("Y_06E");
	m_Out[Y_06E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_06F].m_strIOName = _T("Y_06F");
	m_Out[Y_06F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y070 ~ Y07F
	m_Out[Y_AMT_CJIG_MAIN_VAC_SOL].m_strIOName = _T("Y_AMT_CJIG_MAIN_VAC_SOL");
	m_Out[Y_AMT_CJIG_MAIN_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_CJIG_CH1_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_CJIG_CH1_CELL_VAC_SOL");
	m_Out[Y_AMT_CJIG_CH1_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_CJIG_CH2_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_CJIG_CH2_CELL_VAC_SOL");
	m_Out[Y_AMT_CJIG_CH2_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_CJIG_CH1_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_CJIG_CH1_FPCB_VAC_SOL");
	m_Out[Y_AMT_CJIG_CH1_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_CJIG_CH2_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_CJIG_CH2_FPCB_VAC_SOL");
	m_Out[Y_AMT_CJIG_CH2_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_DJIG_MAIN_VAC_SOL].m_strIOName = _T("Y_AMT_DJIG_MAIN_VAC_SOL");
	m_Out[Y_AMT_DJIG_MAIN_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_DJIG_CH1_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_DJIG_CH1_CELL_VAC_SOL");
	m_Out[Y_AMT_DJIG_CH1_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_DJIG_CH2_CELL_VAC_SOL].m_strIOName = _T("Y_AMT_DJIG_CH2_CELL_VAC_SOL");
	m_Out[Y_AMT_DJIG_CH2_CELL_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_DJIG_CH1_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_DJIG_CH1_FPCB_VAC_SOL");
	m_Out[Y_AMT_DJIG_CH1_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_AMT_DJIG_CH2_FPCB_VAC_SOL].m_strIOName = _T("Y_AMT_DJIG_CH2_FPCB_VAC_SOL");
	m_Out[Y_AMT_DJIG_CH2_FPCB_VAC_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_07A].m_strIOName = _T("Y_07A");
	m_Out[Y_07A].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_07B].m_strIOName = _T("Y_07B");
	m_Out[Y_07B].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_07C].m_strIOName = _T("Y_07C");
	m_Out[Y_07C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_07D].m_strIOName = _T("Y_07D");
	m_Out[Y_07D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_07E].m_strIOName = _T("Y_07E");
	m_Out[Y_07E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_07F].m_strIOName = _T("Y_07F");
	m_Out[Y_07F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y080 ~ Y08F
	m_Out[Y_ULD_TR_CH1_CELL_BLOW_ON_SOL].m_strIOName = _T("Y_ULD_TR_CH1_CELL_BLOW_ON_SOL");
	m_Out[Y_ULD_TR_CH1_CELL_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_TR_CH1_CELL_VAC_ON_SOL].m_strIOName = _T("Y_ULD_TR_CH1_CELL_VAC_ON_SOL");
	m_Out[Y_ULD_TR_CH1_CELL_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_082].m_strIOName = _T("Y_082");
	m_Out[Y_082].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_TR_CH2_CELL_BLOW_ON_SOL].m_strIOName = _T("Y_ULD_TR_CH2_CELL_BLOW_ON_SOL");
	m_Out[Y_ULD_TR_CH2_CELL_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_TR_CH2_CELL_VAC_ON_SOL].m_strIOName = _T("Y_ULD_TR_CH2_CELL_VAC_ON_SOL");
	m_Out[Y_ULD_TR_CH2_CELL_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_085].m_strIOName = _T("Y_085");
	m_Out[Y_085].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_STAGE_CH1_BLOW_ON_SOL].m_strIOName = _T("Y_ULD_STAGE_CH1_BLOW_ON_SOL");
	m_Out[Y_ULD_STAGE_CH1_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_STAGE_CH1_VAC_ON_SOL].m_strIOName = _T("Y_ULD_STAGE_CH1_VAC_ON_SOL");
	m_Out[Y_ULD_STAGE_CH1_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_STAGE_CH2_BLOW_ON_SOL].m_strIOName = _T("Y_ULD_STAGE_CH2_BLOW_ON_SOL");
	m_Out[Y_ULD_STAGE_CH2_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_STAGE_CH2_VAC_ON_SOL].m_strIOName = _T("Y_ULD_STAGE_CH2_VAC_ON_SOL");
	m_Out[Y_ULD_STAGE_CH2_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_ROBOT_CELL_BLOW_ON_SOL].m_strIOName = _T("Y_ULD_ROBOT_CELL_BLOW_ON_SOL");
	m_Out[Y_ULD_ROBOT_CELL_BLOW_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_ULD_ROBOT_CELL_VAC_ON_SOL].m_strIOName = _T("Y_ULD_ROBOT_CELL_VAC_ON_SOL");
	m_Out[Y_ULD_ROBOT_CELL_VAC_ON_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_08C].m_strIOName = _T("Y_08C");
	m_Out[Y_08C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_08D].m_strIOName = _T("Y_08D");
	m_Out[Y_08D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_08E].m_strIOName = _T("Y_08E");
	m_Out[Y_08E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_08F].m_strIOName = _T("Y_08F");
	m_Out[Y_08F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y090 ~ Y09F
	m_Out[Y_090].m_strIOName = _T("Y_090");
	m_Out[Y_090].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_091].m_strIOName = _T("Y_091");
	m_Out[Y_091].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_092].m_strIOName = _T("Y_092");
	m_Out[Y_092].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_093].m_strIOName = _T("Y_093");
	m_Out[Y_093].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_094].m_strIOName = _T("Y_094");
	m_Out[Y_094].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL].m_strIOName = _T("Y_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL");
	m_Out[Y_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL].m_strIOName = _T("Y_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL");
	m_Out[Y_GOOD_ULD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SOL_1].m_strIOName = _T("Y_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SOL_1");
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SOL_1].m_strIOName = _T("Y_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SOL_1");
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SOL_2].m_strIOName = _T("Y_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SOL_2");
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_UP_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SOL_2].m_strIOName = _T("Y_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SOL_2");
	m_Out[Y_GOOD_ULD_TRAY_LOWER_STOPPER_DOWN_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_MUTE_ON].m_strIOName = _T("Y_GOOD_LD_TRAY_MUTE_ON");
	m_Out[Y_GOOD_LD_TRAY_MUTE_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_MUTE_ON].m_strIOName = _T("Y_GOOD_ULD_TRAY_MUTE_ON");
	m_Out[Y_GOOD_ULD_TRAY_MUTE_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_MUTE_ON].m_strIOName = _T("Y_NG_TRAY_MUTE_ON");
	m_Out[Y_NG_TRAY_MUTE_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GRIP_SW_ON].m_strIOName = _T("Y_GRIP_SW_ON");
	m_Out[Y_GRIP_SW_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_09F].m_strIOName = _T("Y_09F");
	m_Out[Y_09F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y0A0 ~ Y0AF
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1");
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1");
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2");
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2");
	m_Out[Y_GOOD_LD_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1");
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1");
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2");
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2].m_strIOName = _T("Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2");
	m_Out[Y_GOOD_LD_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL].m_strIOName = _T("Y_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL");
	m_Out[Y_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL].m_strIOName = _T("Y_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL");
	m_Out[Y_GOOD_LD_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_UP_SOL_1].m_strIOName = _T("Y_GOOD_LD_TRAY_LOWER_STOPPER_UP_SOL_1");
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_UP_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SOL_1].m_strIOName = _T("Y_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SOL_1");
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_UP_SOL_2].m_strIOName = _T("Y_GOOD_LD_TRAY_LOWER_STOPPER_UP_SOL_2");
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_UP_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SOL_2].m_strIOName = _T("Y_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SOL_2");
	m_Out[Y_GOOD_LD_TRAY_LOWER_STOPPER_DOWN_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1].m_strIOName = _T("Y_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1");
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1].m_strIOName = _T("Y_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1");
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;

	//Y0B0 ~ Y0BF
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2].m_strIOName = _T("Y_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2");
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_FORWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2].m_strIOName = _T("Y_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2");
	m_Out[Y_NG_TRAY_UPPER_ALIGN_GUIDE_BACKWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1].m_strIOName = _T("Y_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1");
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1].m_strIOName = _T("Y_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1");
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2].m_strIOName = _T("Y_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2");
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_FORWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2].m_strIOName = _T("Y_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2");
	m_Out[Y_NG_TRAY_UPPER_DIVISION_GUIDE_BACKWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL_1].m_strIOName = _T("Y_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL_1");
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL_1].m_strIOName = _T("Y_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL_1");
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL_2].m_strIOName = _T("Y_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL_2");
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_FORWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL_2].m_strIOName = _T("Y_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL_2");
	m_Out[Y_NG_TRAY_LOWER_ALIGN_GUIDE_BACKWARD_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_STOPPER_UP_SOL_1].m_strIOName = _T("Y_NG_TRAY_LOWER_STOPPER_UP_SOL_1");
	m_Out[Y_NG_TRAY_LOWER_STOPPER_UP_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_STOPPER_DOWN_SOL_1].m_strIOName = _T("Y_NG_TRAY_LOWER_STOPPER_DOWN_SOL_1");
	m_Out[Y_NG_TRAY_LOWER_STOPPER_DOWN_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_STOPPER_UP_SOL_2].m_strIOName = _T("Y_NG_TRAY_LOWER_STOPPER_UP_SOL_2");
	m_Out[Y_NG_TRAY_LOWER_STOPPER_UP_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_LOWER_STOPPER_DOWN_SOL_2].m_strIOName = _T("Y_NG_TRAY_LOWER_STOPPER_DOWN_SOL_2");
	m_Out[Y_NG_TRAY_LOWER_STOPPER_DOWN_SOL_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0BE].m_strIOName = _T("Y_0BE");
	m_Out[Y_0BE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0BF].m_strIOName = _T("Y_0BF");
	m_Out[Y_0BF].m_Check = CIOParam::CHECK_TYPE_A;

	//Y0C0 ~ Y0CF
	m_Out[Y_NG_TRAY_ALIGN_ARM_IN_SOL].m_strIOName = _T("Y_NG_TRAY_ALIGN_ARM_IN_SOL");
	m_Out[Y_NG_TRAY_ALIGN_ARM_IN_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_ALIGN_ARM_OUT_SOL].m_strIOName = _T("Y_NG_TRAY_ALIGN_ARM_OUT_SOL");
	m_Out[Y_NG_TRAY_ALIGN_ARM_OUT_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_TRAY_ALIGN_ARM_IN_SOL].m_strIOName = _T("Y_NG_BUFFER_TRAY_ALIGN_ARM_IN_SOL");
	m_Out[Y_NG_BUFFER_TRAY_ALIGN_ARM_IN_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_TRAY_ALIGN_ARM_OUT_SOL].m_strIOName = _T("Y_NG_BUFFER_TRAY_ALIGN_ARM_OUT_SOL");
	m_Out[Y_NG_BUFFER_TRAY_ALIGN_ARM_OUT_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_TRAY_UP_SOL].m_strIOName = _T("Y_NG_TRAY_TRAY_UP_SOL");
	m_Out[Y_NG_TRAY_TRAY_UP_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_TRAY_DOWN_SOL].m_strIOName = _T("Y_NG_TRAY_TRAY_DOWN_SOL");
	m_Out[Y_NG_TRAY_TRAY_DOWN_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_TRAY_TRAY_UP_SOL].m_strIOName = _T("Y_NG_BUFFER_TRAY_TRAY_UP_SOL");
	m_Out[Y_NG_BUFFER_TRAY_TRAY_UP_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_TRAY_TRAY_DOWN_SOL].m_strIOName = _T("Y_NG_BUFFER_TRAY_TRAY_DOWN_SOL");
	m_Out[Y_NG_BUFFER_TRAY_TRAY_DOWN_SOL].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0C8].m_strIOName = _T("Y_0C8");
	m_Out[Y_0C8].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0C9].m_strIOName = _T("Y_0C9");
	m_Out[Y_0C9].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0CA].m_strIOName = _T("Y_0CA");
	m_Out[Y_0CA].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0CB].m_strIOName = _T("Y_0CB");
	m_Out[Y_0CB].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0CC].m_strIOName = _T("Y_0CC");
	m_Out[Y_0CC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0CD].m_strIOName = _T("Y_0CD");
	m_Out[Y_0CD].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0CE].m_strIOName = _T("Y_0CE");
	m_Out[Y_0CE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0CF].m_strIOName = _T("Y_0CF");
	m_Out[Y_0CF].m_Check = CIOParam::CHECK_TYPE_A;

	//Y0D0 ~ Y0DF
	m_Out[Y_GOOD_TRAY_TR_BLOW_ON_SOL_1].m_strIOName = _T("Y_GOOD_TRAY_TR_BLOW_ON_SOL_1");
	m_Out[Y_GOOD_TRAY_TR_BLOW_ON_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_TRAY_TR_VAC_ON_SOL_1].m_strIOName = _T("Y_GOOD_TRAY_TR_VAC_ON_SOL_1");
	m_Out[Y_GOOD_TRAY_TR_VAC_ON_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0D2].m_strIOName = _T("Y_0D2");
	m_Out[Y_0D2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0D3].m_strIOName = _T("Y_0D3");
	m_Out[Y_0D3].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_TR_BLOW_ON_SOL_1].m_strIOName = _T("Y_NG_TRAY_TR_BLOW_ON_SOL_1");
	m_Out[Y_NG_TRAY_TR_BLOW_ON_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_TR_VAC_ON_SOL_1].m_strIOName = _T("Y_NG_TRAY_TR_VAC_ON_SOL_1");
	m_Out[Y_NG_TRAY_TR_VAC_ON_SOL_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0D6].m_strIOName = _T("Y_0D6");
	m_Out[Y_0D6].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0D7].m_strIOName = _T("Y_0D7");
	m_Out[Y_0D7].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UD_DOOR_UNLOCK_1].m_strIOName = _T("Y_UD_DOOR_UNLOCK_1");
	m_Out[Y_UD_DOOR_UNLOCK_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UD_DOOR_UNLOCK_2].m_strIOName = _T("Y_UD_DOOR_UNLOCK_2");
	m_Out[Y_UD_DOOR_UNLOCK_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UD_DOOR_UNLOCK_3].m_strIOName = _T("Y_UD_DOOR_UNLOCK_3");
	m_Out[Y_UD_DOOR_UNLOCK_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UD_DOOR_UNLOCK_4].m_strIOName = _T("Y_UD_DOOR_UNLOCK_4");
	m_Out[Y_UD_DOOR_UNLOCK_4].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UD_DOOR_UNLOCK_5].m_strIOName = _T("Y_UD_DOOR_UNLOCK_5");
	m_Out[Y_UD_DOOR_UNLOCK_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_UD_DOOR_UNLOCK_6].m_strIOName = _T("Y_UD_DOOR_UNLOCK_6");
	m_Out[Y_UD_DOOR_UNLOCK_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0DE].m_strIOName = _T("Y_0DE");
	m_Out[Y_0DE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0DF].m_strIOName = _T("Y_0DF");
	m_Out[Y_0DF].m_Check = CIOParam::CHECK_TYPE_A;

	//Y0E0 ~ Y0EF
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_CCW_RUN].m_strIOName = _T("Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_CCW_RUN");
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_CCW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_CW_RUN].m_strIOName = _T("Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_CW_RUN");
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_CW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_RESET].m_strIOName = _T("Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_RESET");
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_RESET].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_ACC].m_strIOName = _T("Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_ACC");
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_ACC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_DEC].m_strIOName = _T("Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_DEC");
	m_Out[Y_GOOD_ULD_BUFFER_CONV_TRAY_INVERTER_DEC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_CCW_RUN].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_INVERTER_CCW_RUN");
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_CCW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_CW_RUN].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_INVERTER_CW_RUN");
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_CW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_RESET].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_INVERTER_RESET");
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_RESET].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_ACC].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_INVERTER_ACC");
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_ACC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_DEC].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_INVERTER_DEC");
	m_Out[Y_GOOD_ULD_CONV_TRAY_INVERTER_DEC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_CCW_RUN].m_strIOName = _T("Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_CCW_RUN");
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_CCW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_CW_RUN].m_strIOName = _T("Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_CW_RUN");
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_CW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_RESET].m_strIOName = _T("Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_RESET");
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_RESET].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_ACC].m_strIOName = _T("Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_ACC");
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_ACC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_DEC].m_strIOName = _T("Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_DEC");
	m_Out[Y_GOOD_LD_BUFFER_CONV_TRAY_INVERTER_DEC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_CCW_RUN].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_INVERTER_CCW_RUN");
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_CCW_RUN].m_Check = CIOParam::CHECK_TYPE_A;

	//Y0F0 ~ Y0FF
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_CW_RUN].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_INVERTER_CW_RUN");
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_CW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_RESET].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_INVERTER_RESET");
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_RESET].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_ACC].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_INVERTER_ACC");
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_ACC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_DEC].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_INVERTER_DEC");
	m_Out[Y_GOOD_LD_CONV_TRAY_INVERTER_DEC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_CCW_RUN].m_strIOName = _T("Y_NG_BUFFER_CONV_TRAY_INVERTER_CCW_RUN");
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_CCW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_CW_RUN].m_strIOName = _T("Y_NG_BUFFER_CONV_TRAY_INVERTER_CW_RUN");
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_CW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_RESET].m_strIOName = _T("Y_NG_BUFFER_CONV_TRAY_INVERTER_RESET");
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_RESET].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_ACC].m_strIOName = _T("Y_NG_BUFFER_CONV_TRAY_INVERTER_ACC");
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_ACC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_DEC].m_strIOName = _T("Y_NG_BUFFER_CONV_TRAY_INVERTER_DEC");
	m_Out[Y_NG_BUFFER_CONV_TRAY_INVERTER_DEC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_INVERTER_CCW_RUN].m_strIOName = _T("Y_NG_CONV_TRAY_INVERTER_CCW_RUN");
	m_Out[Y_NG_CONV_TRAY_INVERTER_CCW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_INVERTER_CW_RUN].m_strIOName = _T("Y_NG_CONV_TRAY_INVERTER_CW_RUN");
	m_Out[Y_NG_CONV_TRAY_INVERTER_CW_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_INVERTER_RESET].m_strIOName = _T("Y_NG_CONV_TRAY_INVERTER_RESET");
	m_Out[Y_NG_CONV_TRAY_INVERTER_RESET].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_INVERTER_ACC].m_strIOName = _T("Y_NG_CONV_TRAY_INVERTER_ACC");
	m_Out[Y_NG_CONV_TRAY_INVERTER_ACC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_INVERTER_DEC].m_strIOName = _T("Y_NG_CONV_TRAY_INVERTER_DEC");
	m_Out[Y_NG_CONV_TRAY_INVERTER_DEC].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0FE].m_strIOName = _T("Y_0FE");
	m_Out[Y_0FE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_0FF].m_strIOName = _T("Y_0FF");
	m_Out[Y_0FF].m_Check = CIOParam::CHECK_TYPE_A;

	//Y100 ~ Y10F
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_MODE].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_MODE");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_MODE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_SELECT].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_SELECT");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_SELECT].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_REQ].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_REQ");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_REQ].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_CONNECTION].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_CONNECTION");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_CONNECTION].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_START].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_START");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_START].m_Check = CIOParam::CHECK_TYPE_A;
	//2017-08-30,SKCHO, 신규 IO 추가
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_ABORT].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_ABORT");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_ABORT].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_5].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_IN_5");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_6].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_IN_6");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_6].m_Check = CIOParam::CHECK_TYPE_A;
	/*m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_COMP].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_COMP");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_COMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_5].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_IN_5");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_6].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_IN_6");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_IN_6].m_Check = CIOParam::CHECK_TYPE_A;*/
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_LOADING].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_LOADING");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_LOADING].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_UNLOADING].m_strIOName = _T("Y_GOOD_ULD_CONV_TRAY_PIO_UNLOADING");
	m_Out[Y_GOOD_ULD_CONV_TRAY_PIO_UNLOADING].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_MODE].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_MODE");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_MODE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_SELECT].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_SELECT");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_SELECT].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_REQ].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_REQ");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_REQ].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_CONNECTION].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_CONNECTION");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_CONNECTION].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_START].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_START");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_START].m_Check = CIOParam::CHECK_TYPE_A;
	//2017-08-30,SKCHO, 신규 IO 추가
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_ABORT].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_ABORT");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_ABORT].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_5].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_IN_5");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_6].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_IN_6");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_6].m_Check = CIOParam::CHECK_TYPE_A;
	/*m_Out[Y_GOOD_LD_CONV_TRAY_PIO_COMP].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_COMP");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_COMP].m_Check = CIOParam::CHECK_TYPE_A;
	//Y110 ~ Y11F
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_5].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_IN_5");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_6].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_IN_6");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_IN_6].m_Check = CIOParam::CHECK_TYPE_A;*/
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_LOADING].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_LOADING");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_LOADING].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_UNLOADING].m_strIOName = _T("Y_GOOD_LD_CONV_TRAY_PIO_UNLOADING");
	m_Out[Y_GOOD_LD_CONV_TRAY_PIO_UNLOADING].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_MODE].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_MODE");
	m_Out[Y_NG_CONV_TRAY_PIO_MODE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_SELECT].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_SELECT");
	m_Out[Y_NG_CONV_TRAY_PIO_SELECT].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_REQ].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_REQ");
	m_Out[Y_NG_CONV_TRAY_PIO_REQ].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_CONNECTION].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_CONNECTION");
	m_Out[Y_NG_CONV_TRAY_PIO_CONNECTION].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_START].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_START");
	m_Out[Y_NG_CONV_TRAY_PIO_START].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_COMP].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_COMP");
	m_Out[Y_NG_CONV_TRAY_PIO_COMP].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_IN_5].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_IN_5");
	m_Out[Y_NG_CONV_TRAY_PIO_IN_5].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_IN_6].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_IN_6");
	m_Out[Y_NG_CONV_TRAY_PIO_IN_6].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_IN_7].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_IN_7");
	m_Out[Y_NG_CONV_TRAY_PIO_IN_7].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_CONV_TRAY_PIO_IN_8].m_strIOName = _T("Y_NG_CONV_TRAY_PIO_IN_8");
	m_Out[Y_NG_CONV_TRAY_PIO_IN_8].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_11E].m_strIOName = _T("Y_11E");
	m_Out[Y_11E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_11F].m_strIOName = _T("Y_11F");
	m_Out[Y_11F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y120 ~ Y12F
	m_Out[Y_TOWER_LAMP_GREEN2].m_strIOName = _T("Y_TOWER_LAMP_GREEN2");
	m_Out[Y_TOWER_LAMP_GREEN2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_TOWER_LAMP_YELLOW2].m_strIOName = _T("Y_TOWER_LAMP_YELLOW2");
	m_Out[Y_TOWER_LAMP_YELLOW2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_TOWER_LAMP_RED2].m_strIOName = _T("Y_TOWER_LAMP_RED2");
	m_Out[Y_TOWER_LAMP_RED2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_123].m_strIOName = _T("Y_123");
	m_Out[Y_123].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_124].m_strIOName = _T("Y_124");
	m_Out[Y_124].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HYBRID_ROBOT_RUN].m_strIOName = _T("Y_HYBRID_ROBOT_RUN");
	m_Out[Y_HYBRID_ROBOT_RUN].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HYBRID_SEND_COMPLETE].m_strIOName = _T("Y_HYBRID_SEND_COMPLETE");
	m_Out[Y_HYBRID_SEND_COMPLETE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HYBRID_ROBOT_READY].m_strIOName = _T("Y_HYBRID_ROBOT_READY");
	m_Out[Y_HYBRID_ROBOT_READY].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_128].m_strIOName = _T("Y_128");
	m_Out[Y_128].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_129].m_strIOName = _T("Y_129");
	m_Out[Y_129].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_12A].m_strIOName = _T("Y_12A");
	m_Out[Y_12A].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_12B].m_strIOName = _T("Y_12B");
	m_Out[Y_12B].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_12C].m_strIOName = _T("Y_12C");
	m_Out[Y_12C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_12D].m_strIOName = _T("Y_12D");
	m_Out[Y_12D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_12E].m_strIOName = _T("Y_12E");
	m_Out[Y_12E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_12F].m_strIOName = _T("Y_12F");
	m_Out[Y_12F].m_Check = CIOParam::CHECK_TYPE_A;

	//Y130 ~ Y13F
	m_Out[Y_GOOD_LD_TRAY_REQ_SW].m_strIOName = _T("Y_GOOD_LD_TRAY_REQ_SW");
	m_Out[Y_GOOD_LD_TRAY_REQ_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_COMP_SW].m_strIOName = _T("Y_GOOD_LD_TRAY_COMP_SW");
	m_Out[Y_GOOD_LD_TRAY_COMP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_LD_TRAY_MUTING_LAMP_ON].m_strIOName = _T("Y_GOOD_LD_TRAY_MUTING_LAMP_ON");
	m_Out[Y_GOOD_LD_TRAY_MUTING_LAMP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_REQ_SW].m_strIOName = _T("Y_GOOD_ULD_TRAY_REQ_SW");
	m_Out[Y_GOOD_ULD_TRAY_REQ_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_COMP_SW].m_strIOName = _T("Y_GOOD_ULD_TRAY_COMP_SW");
	m_Out[Y_GOOD_ULD_TRAY_COMP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_GOOD_ULD_TRAY_MUTING_LAMP_ON].m_strIOName = _T("Y_GOOD_ULD_TRAY_MUTING_LAMP_ON");
	m_Out[Y_GOOD_ULD_TRAY_MUTING_LAMP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_IN_REQ_SW].m_strIOName = _T("Y_NG_TRAY_IN_REQ_SW");
	m_Out[Y_NG_TRAY_IN_REQ_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_IN_COMP_SW].m_strIOName = _T("Y_NG_TRAY_IN_COMP_SW");
	m_Out[Y_NG_TRAY_IN_COMP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_MUTING_LAMP_ON].m_strIOName = _T("Y_NG_TRAY_MUTING_LAMP_ON");
	m_Out[Y_NG_TRAY_MUTING_LAMP_ON].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_OUT_REQ_SW].m_strIOName = _T("Y_NG_TRAY_OUT_REQ_SW");
	m_Out[Y_NG_TRAY_OUT_REQ_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_NG_TRAY_OUT_COMP_SW].m_strIOName = _T("Y_NG_TRAY_OUT_COMP_SW");
	m_Out[Y_NG_TRAY_OUT_COMP_SW].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_13B].m_strIOName = _T("Y_13B");
	m_Out[Y_13B].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_13C].m_strIOName = _T("Y_13C");
	m_Out[Y_13C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_13D].m_strIOName = _T("Y_13D");
	m_Out[Y_13D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_13E].m_strIOName = _T("Y_13E");
	m_Out[Y_13E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_13F].m_strIOName = _T("Y_13F");
	m_Out[Y_13F].m_Check = CIOParam::CHECK_TYPE_A;

	m_Out[Y_HOTLINE_ALIVE].m_strIOName = _T("Y_HOTLINE_ALIVE");
	m_Out[Y_HOTLINE_ALIVE].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_EMERGENCY].m_strIOName = _T("Y_HOTLINE_EMERGENCY");
	m_Out[Y_HOTLINE_EMERGENCY].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_NET_READY].m_strIOName = _T("Y_HOTLINE_NET_READY");
	m_Out[Y_HOTLINE_NET_READY].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_RESERVED].m_strIOName = _T("Y_HOTLINE_RESERVED");
	m_Out[Y_HOTLINE_RESERVED].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_INTERFACE_1].m_strIOName = _T("Y_HOTLINE_INTERFACE_1");
	m_Out[Y_HOTLINE_INTERFACE_1].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_INTERFACE_2].m_strIOName = _T("Y_HOTLINE_INTERFACE_2");
	m_Out[Y_HOTLINE_INTERFACE_2].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_INTERFACE_3].m_strIOName = _T("Y_HOTLINE_INTERFACE_3");
	m_Out[Y_HOTLINE_INTERFACE_3].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_HOTLINE_SUB_EMO].m_strIOName = _T("Y_HOTLINE_SUB_EMO");
	m_Out[Y_HOTLINE_SUB_EMO].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_148].m_strIOName = _T("Y_148");
	m_Out[Y_148].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_149].m_strIOName = _T("Y_149");
	m_Out[Y_149].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_14A].m_strIOName = _T("Y_14A");
	m_Out[Y_14A].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_14B].m_strIOName = _T("Y_14B");
	m_Out[Y_14B].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_14C].m_strIOName = _T("Y_14C");
	m_Out[Y_14C].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_14D].m_strIOName = _T("Y_14D");
	m_Out[Y_14D].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_14E].m_strIOName = _T("Y_14E");
	m_Out[Y_14E].m_Check = CIOParam::CHECK_TYPE_A;
	m_Out[Y_14F].m_strIOName = _T("Y_14F");
	m_Out[Y_14F].m_Check = CIOParam::CHECK_TYPE_A;
#endif

}

CIOParam CIOParamBank::GetInputIOParam(INPUT_ID ID)
{
	return m_In[ID];
}

CIOParam CIOParamBank::GetOutputIOParam(OUTPUT_ID ID)
{
	return m_Out[ID];
}